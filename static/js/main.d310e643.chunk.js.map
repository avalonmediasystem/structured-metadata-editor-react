{"version":3,"sources":["data/utah_phillips_one.mp3","api/Utils.js","actions/types.js","components/Waveform.js","containers/WaveformContainer.js","actions/peaks-instance.js","actions/show-forms.js","components/AlertDismissable.js","containers/AlertContainer.js","services/StructuralMetadataUtils.js","services/form-helper.js","components/HeadingForm.js","actions/sm-data.js","containers/HeadingFormContainer.js","components/TimespanForm.js","containers/TimespanFormContainer.js","components/ButtonSection.js","services/Constants.js","components/ListItemInlineEditControls.js","components/TimespanInlineForm.js","components/HeadingInlineForm.js","components/ListItemEditForm.js","components/ListItemControls.js","components/ListItem.js","components/PlaceholderItem.js","components/List.js","containers/GenerateStructureContainer.js","containers/StructureOutputContainer.js","App.js","reducers/show-forms.js","reducers/sm-data.js","services/WaveformDataUtils.js","reducers/peaks-instance.js","reducers/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BASE_URL","defaultHeaders","Headers","append","APIUtils","urlEndPoint","headers","arguments","length","undefined","url","concat","axios","get","data","post","ADD_HEADING","BUILD_SM_UI","DELETE_ITEM","ADD_DROP_TARGETS","REMOVE_DROP_TARGETS","SET_ACTIVE_DRAG_SOURCE","REMOVE_ACTIVE_DRAG_SOURCES","HANDLE_LIST_ITEM_DROP","INIT_PEAKS","Waveform","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","zoomIn","peaksInstance","zoom","zoomOut","seekTime","timeInSeconds","parseFloat","state","Number","isNaN","player","seek","waveformContainer","React","createRef","mediaPlayer","handleSubmit","bind","assertThisInitialized","handleChange","waveformRef","current","mediaPlayerRef","event","preventDefault","setState","target","value","react_default","a","createElement","id","ref","Row","Col","xs","md","controls","src","soundMP3","type","className","Form","inline","onSubmit","FormGroup","ButtonToolbar","Button","onClick","FormControl","onChange","placeholder","Component","connect","apiUtils","peaksOptions","container","mediaElement","dataUri","dataUriDefaultFormat","keyboard","pointMarkerColor","showPlayheadTime","zoomWaveformColor","WaveformContainer","getRequest","then","response","request","responseURL","_this2","initPeaks","smData","catch","error","handleResponse","status","_this3","components_Waveform","dispatch","options","types","peaksActions","code","closeAlert","AlertDismissable","handleDismiss","showForms","statusCode","Alert","bsStyle","onDismiss","createAlert","showFormActions","AlertContainer","alert","components_AlertDismissable","StructuralMetadataUtils","dndHelper","addSpanBefore","allItems","wrapperSpanBefore","beforeParent","getParentDiv","beforeIndex","items","map","item","indexOf","splice","createDropZoneObject","addSpanAfter","wrapperSpanAfter","afterParent","afterIndex","stuckInMiddle","spanIndex","siblings","parentDiv","addSpanToEmptyHeader","wrapperParents","findWrapperHeaders","after","uuidv1","obj","label","timespanTitle","begin","beginTime","end","endTime","clonedItems","toConsumableArray","findItem","indexToDelete","findIndex","dragSource","wrapperSpans","findWrapperSpans","getItemsOfType","sibling","push","unshift","grandParentDiv","parentIndex","before","time","allSpans","toMs","valid","i","spanBegin","spanEnd","filteredSpans","filter","span","foundItem","fn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","newSpan","spansBefore","spansAfter","wrapperHeadings","getItems","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","currentObj","objectSpread","child","foundDiv","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","currentChild","validHeadings","sortedHeadings","findSpanItem","targetSpan","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","childItem","cloneWOItems","objectWithoutProperties","allHeadings","validDivHeading","getValidHeadingForEmptySpans","forEach","key","found","heading","adjacentDiv","getWrapperDiv","currentParent","position","nestedHeadings","getNestedDivs","currentHeader","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_adjacentDiv","woItems","dropTarget","itemToMove","itemToMoveParent","itemToMoveItemIndex","dropTargetParent","dropTargetItemIndex","removeDropTargets","headingChildOf","headingTitle","timespanChildOf","spanObj","createSpanObject","insertIndex","childSpans","removeActive","parent","active","removeFromTree","childTypeToRemove","strTime","moment","duration","asMilliseconds","split","structuralMetadataUtils","getExistingFormValues","getValidationBeginState","validFormat","validTimeFormat","validBeginTime","doesTimeOverlap","getValidationEndState","validEndTime","validOrdering","validateBeforeEndTimeOrder","doesTimespanOverlap","getValidationTitleState","title","isTitleValid","validTimespans","message","HeadingForm","childOfOptions","handleCancelClick","toggleHeading","handleChildOfChange","e","handleHeadingChange","_this$state","submitItem","clearFormValues","processOptions","prevProps","isEqual","header","getOptions","controlId","validationState","ControlLabel","Feedback","componentClass","cancelClick","disabled","formIsValid","actions","buildSMUI","json","payload","deleteItem","HeadingFormContainer","submit","values","updatedSmData","submittedItem","insertNewHeader","components_HeadingForm","smActions","TimespanForm","buildHeadingsOptions","getValidHeadings","clearHeadingOptions","handleInputChange","defineProperty","handleTimeChange","updateChildOfOptions","unEditedFormItem","titleValid","childOfValid","timesValidResponse","localValidTimespans","_this$state2","_this$state3","sm","TimespanFormContainer","updatedData","insertNewTimespan","components_TimespanForm","styles","section","margin","well","marginTop","ButtonSection","headingOpen","timespanOpen","handleCancelHeadingClick","handleCancelTimespanClick","handleHeadingClick","handleTimeSpanClick","style","block","Collapse","in","containers_HeadingFormContainer","containers_TimespanFormContainer","containers_AlertContainer","ItemTypes","tooltip","tip","Tooltip","ListItemInlineEditControls","OverlayTrigger","placement","overlay","handleSaveClick","index_es","icon","formControl","TimespanInlineForm","cancelFn","saveFn","tempSmData","cloneDeep","deleteListItem","components_ListItemInlineEditControls","width","HeadingInlineForm","ListItemEditForm","handleEditFormCancel","addUpdatedValues","components_TimespanInlineForm","components_HeadingInlineForm","ListItemControls","itemType","handleShowDropTargetsClick","handleEditClick","handleDelete","ListItem","editing","_this$props$item","_this$props","addDropTargets","removeActiveDragSources","setActiveDragSource","_this$props2","connectDragSource","connectDropTarget","subMenu","components_List","components_ListItemEditForm","components_ListItemControls","mapDispatchToProps","DragConnected","DropTarget","canDrop","monitor","isOver","isOverCurrent","shallow","getItemType","ConnectedDropTarget","DragSource","beginDrag","isDragging","ConnectedDragSource","li","border","opacity","liHovered","PlaceholderItem","hover","component","drop","dragItem","getItem","handleListItemDrop","dropItem","List","components_PlaceholderItem","components_ListItem","GenerateStructureContainer","structureJS","addIds","_context","t0","structureWithIds","StructureOutputContainer","handleSaveItClick","postData","postRequest","statusText","_this$props$smData","containers_GenerateStructureContainer","library","add","faDotCircle","faMinusCircle","faPen","faSave","faTrash","App","lib","backend","HTML5Backend","containers_WaveformContainer","components_ButtonSection","containers_StructureOutputContainer","initialState","action","assign","structrualMetadataUtils","stateClone","determineDropTargets","structMetadataUtils","colors","waveformUtils","initSegments","count","createSegment","startTime","editable","labelText","color","Peaks","init","segments","combineReducers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","store","createStore","rootReducer","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d310e643.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/utah_phillips_one.786f6474.mp3\";","import axios from 'axios';\n\n// Config flag to change the source of data retrieval endpoint\nconst useLocalData = false;\n\nexport const BASE_URL = useLocalData\n  ? 'http://localhost:3123/data/mock-response-'\n  : 'https://spruce.dlib.indiana.edu';\n\n// Masterfile ID on the server\nexport const masterFileID = 'j3860704z';\n\n// Default headers for API calls\nexport const defaultHeaders = new Headers();\ndefaultHeaders.append('Content-Type', 'application/json');\n\nexport default class APIUtils {\n  /**\n   * Construct GET request with parameters,\n   * @param {String} urlEndPoint\n   * @param {Headers} headers\n   */\n  getRequest(urlEndPoint, headers = defaultHeaders) {\n    const url = useLocalData\n      ? `${BASE_URL}${urlEndPoint}`\n      : `${BASE_URL}/master_files/${masterFileID}/${urlEndPoint}`;\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n\n  /**\n   * Construct POST request with parameters,\n   * @param {String} urlEndPoint\n   * @param {JSON} data - JSON data posting to the server\n   * @param {Headers} headers\n   */\n  postRequest(urlEndPoint, data, headers = defaultHeaders) {\n    const url = useLocalData\n      ? `${BASE_URL}${urlEndPoint}`\n      : `${BASE_URL}/master_files/${masterFileID}/${urlEndPoint}`;\n    return axios.post(url, data, {\n      headers: headers\n    });\n  }\n}\n","export const ADD_HEADING = 'ADD_HEADING';\nexport const EDIT_HEADING = 'EDIT_HEADING';\nexport const ADD_TIME_SPAN = 'ADD_TIME_SPAN';\nexport const EDIT_TIME_SPAN = 'EDIT_TIME_SPAN';\nexport const BUILD_SM_UI = 'BUILD_SM_UI';\n\nexport const DELETE_ITEM = 'DELETE_ITEM';\n\nexport const ADD_DROP_TARGETS = 'ADD_DROP_TARGETS';\nexport const REMOVE_DROP_TARGETS = 'REMOVE_DROP_TARGETS';\nexport const SET_ACTIVE_DRAG_SOURCE = 'SET_ACTIVE_DRAG_SOURCE';\nexport const REMOVE_ACTIVE_DRAG_SOURCES = 'REMOVE_ACTIVE_DRAG_SOURCES';\nexport const HANDLE_LIST_ITEM_DROP = 'HANDLE_LIST_ITEM_DROP';\n\nexport const API_RESPONSE = 'API_RESPONSE';\nexport const CLOSE_ALERT = 'CLOSE_ALERT';\n\nexport const INIT_PEAKS = 'INIT_PEAKS';\n","import React, { Component } from 'react';\nimport {\n  Button,\n  ButtonToolbar,\n  FormControl,\n  FormGroup,\n  Form,\n  Row,\n  Col\n} from 'react-bootstrap';\nimport soundMP3 from '../data/utah_phillips_one.mp3';\nimport { connect } from 'react-redux';\n\nclass Waveform extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seekTime: ''\n    };\n\n    // Create `refs`\n    this.waveformContainer = React.createRef();\n    this.mediaPlayer = React.createRef();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // Grab the React `refs` now the component is mounted\n    this.props.waveformRef(this.waveformContainer.current);\n    this.props.mediaPlayerRef(this.mediaPlayer.current);\n  }\n\n  zoomIn = () => {\n    this.props.peaksInstance.zoom.zoomIn();\n  };\n\n  zoomOut = () => {\n    this.props.peaksInstance.zoom.zoomOut();\n  };\n\n  handleSubmit(event) {\n    this.seekTime();\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({\n      seekTime: event.target.value\n    });\n  }\n\n  seekTime = () => {\n    const timeInSeconds = parseFloat(this.state.seekTime);\n    if (!Number.isNaN(timeInSeconds)) {\n      this.props.peaksInstance.player.seek(timeInSeconds);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div id=\"waveform-container\" ref={this.waveformContainer} />\n        <Row>\n          <Col xs={12} md={6}>\n            <audio\n              controls\n              ref={this.mediaPlayer}\n              src={soundMP3}\n              type=\"audio/mp3\"\n            >\n              Your browser does not support the audio element.\n            </audio>\n          </Col>\n          <Col xs={12} md={6} className=\"text-right\">\n            <Form inline onSubmit={this.handleSubmit}>\n              <FormGroup>\n                <ButtonToolbar>\n                  <Button\n                    className=\"glyphicon glyphicon-zoom-in\"\n                    onClick={this.zoomIn}\n                  />\n                  <Button\n                    className=\"glyphicon glyphicon-zoom-out\"\n                    onClick={this.zoomOut}\n                  />\n                </ButtonToolbar>\n              </FormGroup>{' '}\n              <FormControl\n                className=\"form-control\"\n                type=\"text\"\n                value={this.state.seekTime}\n                onChange={this.handleChange}\n                placeholder=\"0\"\n              />{' '}\n              <Button onClick={this.seekTime}>Seek</Button>\n            </Form>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\n// To use in tests as a disconnected component (to access state)\nexport { Waveform as PureWaveform };\n\nconst mapStateToProps = state => ({\n  peaksInstance: state.peaksInstance\n});\n// To use in the app\nexport default connect(mapStateToProps)(Waveform);\n","import React, { Component } from 'react';\nimport APIUtils from '../api/Utils';\nimport { connect } from 'react-redux';\nimport * as peaksActions from '../actions/peaks-instance';\nimport Waveform from '../components/Waveform';\n\nconst apiUtils = new APIUtils();\n\n// Peaks options\nconst peaksOptions = {\n  container: null,\n  mediaElement: null,\n  dataUri: null,\n  dataUriDefaultFormat: 'json',\n  keyboard: true,\n  pointMarkerColor: '#006eb0',\n  showPlayheadTime: true,\n  zoomWaveformColor: 'rgba(217, 217, 217, 1)'\n};\n\nclass WaveformContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.waveformContainer = null;\n    this.mediaPlayer = null;\n    this.peaksInstance = null;\n  }\n\n  async componentDidMount() {\n    peaksOptions.container = this.waveformContainer;\n    peaksOptions.mediaElement = this.mediaPlayer;\n    await apiUtils\n      .getRequest('waveform.json')\n      .then(response => {\n        // Set the masterfile URL as the URI for the waveform data file\n        peaksOptions.dataUri = response.request.responseURL;\n        // Initialize Peaks\n        this.props.initPeaks(this.props.smData, peaksOptions);\n      })\n      .catch(error => {\n        if (error.response !== undefined) {\n          this.props.handleResponse(error.response.status);\n        } else if (error.request !== undefined) {\n          this.props.handleResponse(error.request.status);\n        } else {\n          this.props.handleResponse(-1);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"waveform-section\">\n        <Waveform\n          waveformRef={ref => (this.waveformContainer = ref)}\n          mediaPlayerRef={ref => (this.mediaPlayer = ref)}\n        />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  initPeaks: (smData, options) =>\n    dispatch(peaksActions.initPeaks(smData, options))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WaveformContainer);\n","import * as types from './types';\n\nexport function initPeaks(smData, options) {\n  return {\n    type: types.INIT_PEAKS,\n    smData,\n    options\n  };\n}\n","import * as types from './types';\n\nexport const handleResponse = code => ({\n  type: types.API_RESPONSE,\n  code\n});\n\nexport const closeAlert = () => ({\n  type: types.CLOSE_ALERT\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Alert } from 'react-bootstrap';\nimport * as showFormActions from '../actions/show-forms';\n\nclass AlertDismissable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDismiss = this.handleDismiss.bind(this);\n  }\n\n  handleDismiss() {\n    this.props.closeAlert();\n  }\n\n  createAlert() {\n    const status = this.props.showForms.statusCode;\n    switch (true) {\n      case status === 401:\n        return (\n          <div>\n            <Alert bsStyle=\"danger\" onDismiss={this.handleDismiss}>\n              <p>Unauthorized to access the masterfile.</p>\n            </Alert>\n          </div>\n        );\n      case status === 404:\n        return (\n          <div>\n            <Alert bsStyle=\"danger\" onDismiss={this.handleDismiss}>\n              <p>Requested masterfile not found.</p>\n            </Alert>\n          </div>\n        );\n      case status >= 200 && status < 300:\n        return (\n          <div>\n            <Alert bsStyle=\"success\" onDismiss={this.handleDismiss}>\n              <p>Successfully saved to masterfile.</p>\n            </Alert>\n          </div>\n        );\n      default:\n        return (\n          <div>\n            <Alert bsStyle=\"danger\" onDismiss={this.handleDismiss}>\n              <p>Network error, please try again!</p>\n            </Alert>\n          </div>\n        );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <br />\n        {this.createAlert()}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  closeAlert: () => dispatch(showFormActions.closeAlert())\n});\n\nconst mapStateToProps = state => ({\n  showForms: state.showForms\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AlertDismissable);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AlertDismissable from '../components/AlertDismissable';\n\nclass AlertContainer extends Component {\n  render() {\n    return <div>{this.props.showForms.alert && <AlertDismissable />}</div>;\n  }\n}\nconst mapStateToProps = state => ({\n  showForms: state.showForms\n});\n\nexport default connect(mapStateToProps)(AlertContainer);\n","import { findIndex } from 'lodash';\nimport moment from 'moment';\nimport uuidv1 from 'uuid/v1';\n\n/**\n * Rules - https://github.com/avalonmediasystem/avalon/issues/3022\n *\n * a timespan does not allow overlap.\n * a timepan can not be out of order.\n * a timespan can not be demoted from a parent unless it is the last item in the relationship (last child), as it would create an out of order item.\n * Timespans can only be moved ONE parent- level up or down.\n * Use an arrow and handle click.\n * Only first and last time-spans can be moved. Middle Children are stuck.\n * Headings are ordered by the children they have.\n * If when creating a timespan, you butt against the start or end of another timespan, you have to change the other timepan first.\n * Labels can be edited at will.\n */\n\nexport default class StructuralMetadataUtils {\n  /**\n   * Helper function to create a dropZone object for drag and drop\n   * @returns {Object}\n   */\n  createDropZoneObject() {\n    return {\n      type: 'optional',\n      id: uuidv1()\n    };\n  }\n\n  /**\n   * Helper function which creates an object with the shape our data structure requires\n   * @param {Object} obj\n   * @return {Object}\n   */\n  createSpanObject(obj) {\n    return {\n      id: uuidv1(),\n      type: 'span',\n      label: obj.timespanTitle,\n      begin: obj.beginTime,\n      end: obj.endTime\n    };\n  }\n\n  /**\n   * Remove a targeted list item object from data structure\n   * @param {String} id - list item id\n   * @param {Array} allItems array of items, usually all current items in the data structure\n   * @return {Array}\n   */\n  deleteListItem(id, allItems) {\n    let clonedItems = [...allItems];\n    let item = this.findItem(id, allItems);\n    let parentDiv = this.getParentDiv(item, clonedItems);\n    let indexToDelete = findIndex(parentDiv.items, { id: item.id });\n\n    parentDiv.items.splice(indexToDelete, 1);\n\n    return clonedItems;\n  }\n\n  /**\n   * Update the data structure to represent all possible dropTargets for the provided dragSource\n   * @param {Object} dragSource\n   * @param {Object} allItems\n   * @returns {Array} - new computed items\n   */\n  determineDropTargets(dragSource, allItems) {\n    const clonedItems = [...allItems];\n\n    if (dragSource.type === 'span') {\n      let wrapperSpans = this.findWrapperSpans(\n        dragSource,\n        this.getItemsOfType('span', allItems)\n      );\n      let parentDiv = this.getParentDiv(dragSource, allItems);\n      let siblings = parentDiv ? parentDiv.items : [];\n      let spanIndex = siblings\n        .map(sibling => sibling.id)\n        .indexOf(dragSource.id);\n      let stuckInMiddle = this.dndHelper.stuckInMiddle(\n        spanIndex,\n        siblings,\n        parentDiv\n      );\n\n      // If span falls in the middle of other spans, it can't be moved\n      if (stuckInMiddle) {\n        return clonedItems;\n      }\n\n      // Sibling before is a div?\n      if (spanIndex !== 0 && siblings[spanIndex - 1].type === 'div') {\n        let sibling = siblings[spanIndex - 1];\n        if (sibling.items) {\n          sibling.items.push(this.createDropZoneObject());\n        } else {\n          sibling.items = [this.createDropZoneObject()];\n        }\n      }\n\n      // Sibling after is a div?\n      if (\n        spanIndex !== siblings.length - 1 &&\n        siblings[spanIndex + 1].type === 'div'\n      ) {\n        let sibling = siblings[spanIndex + 1];\n        if (sibling.items) {\n          sibling.items.unshift(this.createDropZoneObject());\n        } else {\n          sibling.items = [this.createDropZoneObject()];\n        }\n      }\n\n      let grandParentDiv = this.getParentDiv(parentDiv, allItems);\n      let parentIndex = grandParentDiv\n        ? grandParentDiv.items.map(item => item.id).indexOf(parentDiv.id)\n        : null;\n      // A first child of siblings, or an only child\n      if (spanIndex === 0) {\n        // Can't move up\n        if (parentIndex === null) {\n          return clonedItems;\n        }\n\n        if (grandParentDiv) {\n          // Insert directly before the parent div\n          grandParentDiv.items.splice(\n            parentIndex,\n            0,\n            this.createDropZoneObject()\n          );\n\n          // Insert after the \"before\" wrapper span (if one exists)\n          if (wrapperSpans.before) {\n            this.dndHelper.addSpanBefore(allItems, wrapperSpans.before);\n          }\n        }\n      }\n\n      // Insert relative to the span after the active span\n      if (wrapperSpans.after) {\n        this.dndHelper.addSpanAfter(allItems, wrapperSpans.after);\n      }\n      // Insert when there is no wrapper span after active span, but empty headers\n      if (!wrapperSpans.after) {\n        this.dndHelper.addSpanToEmptyHeader(parentDiv, allItems);\n      }\n    }\n\n    return clonedItems;\n  }\n\n  /**\n   * Helper object for drag and drop data structure manipulations\n   * This mutates the state of the data structure\n   */\n  dndHelper = {\n    addSpanBefore: (allItems, wrapperSpanBefore) => {\n      let beforeParent = this.getParentDiv(wrapperSpanBefore, allItems);\n      let beforeIndex = beforeParent.items\n        .map(item => item.id)\n        .indexOf(wrapperSpanBefore.id);\n      // Before the insert, check that the dropTarget index doesn't already exist\n      if (\n        beforeParent.items[beforeIndex + 1] &&\n        beforeParent.items[beforeIndex + 1].type !== 'optional'\n      ) {\n        beforeParent.items.splice(\n          beforeIndex + 1,\n          0,\n          this.createDropZoneObject()\n        );\n      }\n    },\n    addSpanAfter: (allItems, wrapperSpanAfter) => {\n      let afterParent = this.getParentDiv(wrapperSpanAfter, allItems);\n      let afterIndex = afterParent.items\n        .map(item => item.id)\n        .indexOf(wrapperSpanAfter.id);\n\n      afterParent.items.splice(afterIndex, 0, this.createDropZoneObject());\n    },\n    stuckInMiddle: (spanIndex, siblings, parentDiv) => {\n      return (\n        spanIndex !== 0 &&\n        spanIndex !== siblings.length - 1 &&\n        parentDiv.items[spanIndex - 1].type === 'span' &&\n        parentDiv.items[spanIndex + 1].type === 'span'\n      );\n    },\n    addSpanToEmptyHeader: (parentDiv, allItems) => {\n      let wrapperParents = this.findWrapperHeaders(parentDiv, allItems);\n      if (wrapperParents.after) {\n        wrapperParents.after.items.splice(0, 0, this.createDropZoneObject());\n      }\n    }\n  };\n\n  /**\n   * Determine whether a time overlaps (or falls between), an existing timespan's range\n   * @param {String} time - form input value\n   * @param {*} allSpans - all timespans in the data structure\n   * @return {Boolean}\n   */\n  doesTimeOverlap(time, allSpans) {\n    const { toMs } = this;\n    let valid = true;\n    time = toMs(time);\n\n    // Loop through all spans\n    for (let i in allSpans) {\n      let spanBegin = toMs(allSpans[i].begin);\n      let spanEnd = toMs(allSpans[i].end);\n\n      // Illegal time (falls between existing start/end times)\n      if (time >= spanBegin && time < spanEnd) {\n        valid = false;\n        break;\n      }\n    }\n    return valid;\n  }\n\n  doesTimespanOverlap(beginTime, endTime, allSpans) {\n    const { toMs } = this;\n    // Filter out only spans where new begin time is before an existing begin time\n    let filteredSpans = allSpans.filter(span => {\n      return toMs(beginTime) < toMs(span.begin);\n    });\n    // Return whether new end time overlaps the next begin time, if there are timespans after the current timespan\n    if (filteredSpans.length !== 0) {\n      return toMs(endTime) > toMs(filteredSpans[0].begin);\n    }\n    return false;\n  }\n\n  /**\n   * Find an item by it's id\n   * @param {String} id - string value to match against\n   * @param {Array} items - Array of nested structured metadata objects containing headings and time spans\n   * @return {Object} - Object found, or null if none\n   */\n  findItem(id, items) {\n    let foundItem = null;\n    let fn = items => {\n      for (let item of items) {\n        if (item.id === id) {\n          foundItem = item;\n        }\n        if (item.items && item.items.length > 0) {\n          fn(item.items);\n        }\n      }\n    };\n    fn(items);\n\n    return foundItem;\n  }\n\n  /**\n   * @param {String} label - string value to match against\n   * @param {Array} items - Array of nested structured metadata objects containing headings and time spans\n   * @return {Object} - Object found, or null if none\n   */\n  findItemByLabel(label, items) {\n    let foundItem = null;\n    let findItem = items => {\n      for (let item of items) {\n        if (item.label === label) {\n          foundItem = item;\n        }\n        if (item.items) {\n          findItem(item.items);\n        }\n      }\n    };\n    findItem(items);\n\n    return foundItem;\n  }\n\n  /**\n   * Find the <span>s which come before and after new span\n   * @param {Object} newSpan - new span object\n   * @param {Array} allSpans - all type <span> objects in current structured metadata\n   * @returns {Object} - wrapper <span>s object: { before: spanObject, after: spanObject }\n   */\n  findWrapperSpans(newSpan, allSpans) {\n    const { toMs } = this;\n    let wrapperSpans = {\n      before: null,\n      after: null\n    };\n    let spansBefore = allSpans.filter(\n      span => toMs(newSpan.begin) >= toMs(span.end)\n    );\n    let spansAfter = allSpans.filter(\n      span => toMs(newSpan.end) <= toMs(span.begin)\n    );\n\n    wrapperSpans.before =\n      spansBefore.length > 0 ? spansBefore[spansBefore.length - 1] : null;\n    wrapperSpans.after = spansAfter.length > 0 ? spansAfter[0] : null;\n\n    return wrapperSpans;\n  }\n\n  /**\n   * Find the <div>s wrapping the current active timespan (either in editing or in drag-n-drop)\n   * @param {Object} parentDiv - parent header of the active timespan\n   * @param {Array} allItems - all the items in the structured metadata\n   */\n  findWrapperHeaders(parentDiv, allItems) {\n    const wrapperHeadings = {\n      before: null,\n      after: null\n    };\n    let grandParentDiv = this.getParentDiv(parentDiv, allItems);\n    let parentIndex = grandParentDiv\n      ? grandParentDiv.items.map(item => item.label).indexOf(parentDiv.label)\n      : null;\n\n    wrapperHeadings.before =\n      grandParentDiv.items[parentIndex - 1] !== undefined\n        ? grandParentDiv.items[parentIndex - 1]\n        : null;\n    wrapperHeadings.after =\n      grandParentDiv.items[parentIndex + 1] !== undefined\n        ? grandParentDiv.items[parentIndex + 1]\n        : null;\n    return wrapperHeadings;\n  }\n\n  /**\n   * Get all items in data structure of type 'div' or 'span'\n   * @param {Array} json\n   * @returns {Array} - all stripped down objects of type in the entire structured metadata collection\n   */\n  getItemsOfType(type = 'div', items = []) {\n    let options = [];\n\n    // Recursive function to search the whole data structure\n    let getItems = items => {\n      for (let item of items) {\n        if (item.type === type) {\n          let currentObj = { ...item };\n          delete currentObj.items;\n          options.push(currentObj);\n        }\n        if (item.items) {\n          getItems(item.items);\n        }\n      }\n    };\n    getItems(items);\n\n    return options;\n  }\n\n  getParentDiv(child, allItems) {\n    let foundDiv = null;\n\n    let findItem = (child, items) => {\n      for (let item of items) {\n        if (item.items) {\n          let childItem = item.items.filter(\n            currentChild => child.id === currentChild.id\n          );\n          // Found it\n          if (childItem.length > 0) {\n            foundDiv = item;\n            break;\n          }\n          findItem(child, item.items);\n        }\n      }\n    };\n    findItem(child, allItems);\n    return foundDiv;\n  }\n\n  /**\n   * Overall logic is to find existing before and after spans for the new object (time flow), and then\n   * their parent 'divs' would be valid headings.\n   * @param {Object} wrapperSpans Object representing before and after spans of newSpan (if they exist)\n   * @param {Array} allItems - All structural metadata items in tree\n   * @return {Array} - of valid <div> objects in structural metadata tree\n   */\n  getValidHeadings(wrapperSpans, allItems) {\n    let validHeadings = [];\n    let sortedHeadings = [];\n\n    let findSpanItem = (targetSpan, items) => {\n      for (let item of items) {\n        // Children items exist\n        if (item.items) {\n          // Check for a target span match\n          let targetSpanMatch = item.items.filter(\n            childItem => childItem.id === targetSpan.id\n          );\n          // Match found\n          if (targetSpanMatch.length > 0) {\n            let { items, ...cloneWOItems } = item;\n            // Add parent div to valid array\n            validHeadings.push(cloneWOItems);\n          }\n          // Try deeper in list\n          findSpanItem(targetSpan, item.items);\n        }\n      }\n    };\n\n    // Get all headings in the metada structure\n    let allHeadings = this.getItemsOfType('div', allItems);\n\n    // There are currently no spans, ALL headings are valid\n    if (!wrapperSpans.before && !wrapperSpans.after) {\n      validHeadings = allHeadings;\n    }\n\n    if (wrapperSpans.before) {\n      findSpanItem(wrapperSpans.before, allItems);\n    }\n    if (wrapperSpans.after) {\n      findSpanItem(wrapperSpans.after, allItems);\n    }\n    // Get valid headings when either of wrapping timespan is null\n    if (\n      (!wrapperSpans.before && wrapperSpans.after) ||\n      (wrapperSpans.before && !wrapperSpans.after)\n    ) {\n      let validDivHeading = this.getValidHeadingForEmptySpans(\n        wrapperSpans,\n        allItems\n      );\n      validHeadings = validHeadings.concat(validDivHeading);\n    }\n\n    // Sort valid headings to comply with the order in the metadata structure\n    allHeadings.forEach(key => {\n      let found = false;\n      validHeadings = validHeadings.filter(heading => {\n        if (!found && heading.label === key.label) {\n          sortedHeadings.push(heading);\n          found = true;\n          return false;\n        } else {\n          return true;\n        }\n      });\n    });\n\n    return sortedHeadings;\n  }\n\n  /**\n   * Find valid headings when either wrapping timespan before or after is null\n   * @param {Object} wrapperSpans - spans wrapping the current active timespan\n   * @param {Array} allItems - all the items in structured metadata\n   */\n  getValidHeadingForEmptySpans(wrapperSpans, allItems) {\n    let adjacentDiv = null;\n\n    let getWrapperDiv = (currentParent, position) => {\n      let wrapperParents = this.findWrapperHeaders(currentParent, allItems);\n      switch (position) {\n        case 'before':\n          return !wrapperParents.before ? currentParent : wrapperParents.before;\n        case 'after':\n          return !wrapperParents.after ? currentParent : wrapperParents.after;\n        default:\n          return currentParent;\n      }\n    };\n\n    let nestedHeadings = [];\n    let getNestedDivs = (currentHeader, currentParent) => {\n      if (currentHeader !== currentParent) {\n        let items = currentHeader.items;\n        if (items) {\n          for (let item of items) {\n            if (item.type === 'div') {\n              let { items, ...cloneWOItems } = item;\n              nestedHeadings.push(cloneWOItems);\n            }\n            getNestedDivs(item, currentParent);\n          }\n        }\n      }\n    };\n    if (!wrapperSpans.after && wrapperSpans.before) {\n      let currentParent = this.getParentDiv(wrapperSpans.before, allItems);\n      adjacentDiv = getWrapperDiv(currentParent, 'after');\n      getNestedDivs(adjacentDiv, currentParent);\n    }\n    if (!wrapperSpans.before && wrapperSpans.after) {\n      let currentParent = this.getParentDiv(wrapperSpans.after, allItems);\n      adjacentDiv = getWrapperDiv(currentParent, 'before');\n      getNestedDivs(adjacentDiv, currentParent);\n    }\n    let { items, ...woItems } = adjacentDiv;\n    nestedHeadings.push(woItems);\n    return nestedHeadings;\n  }\n\n  /**\n   * Helper function which handles React Dnd's dropping of a dragSource onto a dropTarget\n   * It needs to re-arrange the data structure to reflect the new positions\n   * @param {Object} dragSource - a minimal object React DnD uses with only the id value\n   * @param {Object} dropTarget\n   * @param {Array} allItems\n   * @returns {Array}\n   */\n  handleListItemDrop(dragSource, dropTarget, allItems) {\n    let clonedItems = [...allItems];\n    let itemToMove = this.findItem(dragSource.id, clonedItems);\n\n    // Slice out previous position of itemToMove\n    let itemToMoveParent = this.getParentDiv(itemToMove, clonedItems);\n    let itemToMoveItemIndex = itemToMoveParent.items\n      .map(item => item.id)\n      .indexOf(itemToMove.id);\n    itemToMoveParent.items.splice(itemToMoveItemIndex, 1);\n\n    // Place itemToMove right after the placeholder array position\n    let dropTargetParent = this.getParentDiv(dropTarget, clonedItems);\n    let dropTargetItemIndex = dropTargetParent.items\n      .map(item => item.id)\n      .indexOf(dropTarget.id);\n    dropTargetParent.items.splice(dropTargetItemIndex, 0, itemToMove);\n\n    // Get rid of all placeholder elements\n    return this.removeDropTargets(clonedItems);\n  }\n\n  /**\n   * Insert a new heading as child of an existing heading\n   * @param {Object} obj - new heading object to insert\n   * @param {Array} allItems - The entire structured metadata collection\n   * @returns {Array} - The updated structured metadata collection, with new object inserted\n   */\n  insertNewHeader(obj, allItems) {\n    let clonedItems = [...allItems];\n    let foundDiv =\n      this.findItem(obj.headingChildOf, clonedItems) || clonedItems[0];\n\n    // If children exist, add to list\n    if (foundDiv) {\n      foundDiv.items.unshift({\n        id: uuidv1(),\n        type: 'div',\n        label: obj.headingTitle,\n        items: []\n      });\n    }\n\n    return clonedItems;\n  }\n\n  /**\n   * Insert a new timespan as child of an existing heading\n   * @param {Object} obj - object of form values submitted\n   * @param {Array} allItems - The entire structured metadata collection\n   * @returns {Array} - The updated structured metadata collection, with new object inserted\n   */\n  insertNewTimespan(obj, allItems) {\n    let clonedItems = [...allItems];\n    let foundDiv = this.findItem(obj.timespanChildOf, clonedItems);\n    const spanObj = this.createSpanObject(obj);\n    let insertIndex = 0;\n\n    // If children exist, add to list\n    if (foundDiv) {\n      let childSpans = foundDiv.items.filter(item => item.type === 'span');\n\n      // Get before and after sibling spans\n      let wrapperSpans = this.findWrapperSpans(spanObj, childSpans);\n\n      if (wrapperSpans.before) {\n        insertIndex =\n          findIndex(foundDiv.items, { id: wrapperSpans.before.id }) + 1;\n      }\n      // Insert new span at appropriate index\n      foundDiv.items.splice(insertIndex, 0, spanObj);\n    }\n\n    return clonedItems;\n  }\n\n  /**\n   * Recursive function to clean out any 'active' drag item property in the data structure\n   * @param {Array} allItems\n   * @returns {Array}\n   */\n  removeActiveDragSources(allItems) {\n    let removeActive = parent => {\n      if (!parent.items) {\n        if (parent.active) {\n          parent.active = false;\n        }\n        return parent;\n      }\n      parent.items = parent.items.map(child => removeActive(child));\n\n      return parent;\n    };\n    let cleanItems = removeActive(allItems[0]);\n\n    return [cleanItems];\n  }\n\n  /**\n   * Recursive function to remove all temporary Drop Target objects from the structured metadata items\n   * @param {Array} allItems\n   */\n  removeDropTargets(allItems) {\n    let removeFromTree = (parent, childTypeToRemove) => {\n      if (!parent.items) {\n        return parent;\n      }\n\n      parent.items = parent.items\n        .filter(child => child.type !== childTypeToRemove)\n        .map(child => removeFromTree(child, childTypeToRemove));\n\n      return parent;\n    };\n    let cleanItems = removeFromTree(allItems[0], 'optional');\n\n    return [cleanItems];\n  }\n\n  /**\n   * Moment.js helper millisecond converter to make calculations consistent\n   * @param {String} strTime form input value\n   */\n  toMs(strTime) {\n    return moment.duration(strTime).asMilliseconds();\n  }\n\n  /**\n   * Update an existing heading object\n   * @param {Object} heading - updated form object\n   * @param {Array} allItems - the data structure\n   */\n  updateHeading(heading, allItems) {\n    const clonedItems = [...allItems];\n    let item = this.findItem(heading.id, clonedItems);\n    item.label = heading.headingTitle;\n\n    // TODO: Figure out how to handle \"Child Of\" when this becomes inline.\n\n    return clonedItems;\n  }\n\n  /**\n   * Does 'before' time start prior to 'end' time?\n   * @param {String} begin form intput value\n   * @param {String} end form input value\n   * @return {Boolean}\n   */\n  validateBeforeEndTimeOrder(begin, end) {\n    if (!begin || !end) {\n      return true;\n    }\n    if (this.toMs(begin) >= this.toMs(end)) {\n      return false;\n    }\n    return true;\n  }\n\n  validTimeFormat(value) {\n    return value && value.split(':').length === 3;\n  }\n}\n","import StructuralMetadataUtils from './StructuralMetadataUtils';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\n\n/**\n * Load existing form values to state, if in 'EDIT' mode\n */\nexport function getExistingFormValues(id, smData) {\n  let item = structuralMetadataUtils.findItem(id, smData);\n\n  // Heading\n  if (item.type === 'div') {\n    return {\n      headingTitle: item.label\n    };\n  }\n\n  // Timespan\n  if (item.type === 'span') {\n    let parentDiv = structuralMetadataUtils.getParentDiv(item, smData);\n\n    return {\n      beginTime: item.begin,\n      endTime: item.end,\n      timespanChildOf: parentDiv ? parentDiv.id : '',\n      timespanTitle: item.label\n    };\n  }\n}\n\nexport function getValidationBeginState(beginTime, allSpans) {\n  if (!beginTime || beginTime.indexOf(':') === -1) {\n    return null;\n  }\n\n  const validFormat = structuralMetadataUtils.validTimeFormat(beginTime);\n  const validBeginTime = structuralMetadataUtils.doesTimeOverlap(\n    beginTime,\n    allSpans\n  );\n\n  if (validFormat && validBeginTime) {\n    return 'success';\n  }\n  if (!validFormat || !validBeginTime) {\n    return 'error';\n  }\n  return null;\n}\n\nexport function getValidationEndState(beginTime, endTime, allSpans) {\n  if (!endTime || endTime.indexOf(':') === -1) {\n    return null;\n  }\n\n  const validFormat = structuralMetadataUtils.validTimeFormat(endTime);\n  const validEndTime = structuralMetadataUtils.doesTimeOverlap(\n    endTime,\n    allSpans\n  );\n  const validOrdering = structuralMetadataUtils.validateBeforeEndTimeOrder(\n    beginTime,\n    endTime\n  );\n  const doesTimespanOverlap = structuralMetadataUtils.doesTimespanOverlap(\n    beginTime,\n    endTime,\n    allSpans\n  );\n\n  if (validFormat && validEndTime && validOrdering && !doesTimespanOverlap) {\n    return 'success';\n  }\n  if (!validFormat || !validEndTime || !validOrdering || doesTimespanOverlap) {\n    return 'error';\n  }\n  return null;\n}\n\nexport function getValidationTitleState(title) {\n  if (title.length > 2) {\n    return 'success';\n  }\n  if (title.length > 0) {\n    return 'error';\n  }\n  return null;\n}\n\n/**\n * Validation logic for a valid title here\n * @param {String} title\n */\nexport function isTitleValid(title) {\n  return title.length > 2;\n}\n\n/**\n * Validates that the begin and end time span values are valid separately, and together\n * in the region which they will create.\n *\n * This function also preps handy feedback messages we might want to display to the user\n */\nexport function validTimespans(beginTime, endTime, allSpans, smData) {\n  // Valid formats?\n  if (!structuralMetadataUtils.validTimeFormat(beginTime)) {\n    return {\n      valid: false,\n      message: 'Invalid begin time format'\n    };\n  }\n  if (!structuralMetadataUtils.validTimeFormat(endTime)) {\n    return {\n      valid: false,\n      message: 'Invalid end time format'\n    };\n  }\n  // Any individual overlapping?\n  if (!structuralMetadataUtils.doesTimeOverlap(beginTime, allSpans)) {\n    return {\n      valid: false,\n      message: 'Begin time overlaps an existing timespan region'\n    };\n  }\n  if (!structuralMetadataUtils.doesTimeOverlap(endTime, allSpans)) {\n    return {\n      valid: false,\n      message: 'End time overlaps an existing timespan region'\n    };\n  }\n  // Begin comes before end?\n  if (!structuralMetadataUtils.validateBeforeEndTimeOrder(beginTime, endTime)) {\n    return {\n      valid: false,\n      message: 'Begin time must start before end time'\n    };\n  }\n  // Timespan range overlaps an existing timespan?\n  if (\n    structuralMetadataUtils.doesTimespanOverlap(beginTime, endTime, allSpans)\n  ) {\n    return {\n      valid: false,\n      message: 'New timespan region overlaps an existing timespan region'\n    };\n  }\n\n  // Success!\n  return { valid: true };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\nimport {\n  Button,\n  ButtonToolbar,\n  Col,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Row\n} from 'react-bootstrap';\nimport * as actions from '../actions/show-forms';\nimport PropTypes from 'prop-types';\nimport { isEqual } from 'lodash';\nimport { getValidationTitleState } from '../services/form-helper';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\nclass HeadingForm extends Component {\n  state = {\n    headingTitle: '',\n    headingChildOf: '',\n    childOfOptions: []\n  };\n\n  componentDidMount() {\n    if (this.props.smData.length > 0) {\n      this.processOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(this.props.smData, prevProps.smData)) {\n      this.processOptions();\n    }\n  }\n\n  clearFormValues() {\n    this.setState({\n      headingTitle: '',\n      headingChildOf: '',\n      childOfOptions: []\n    });\n  }\n\n  formIsValid() {\n    const { headingTitle } = this.state;\n    const titleValid = headingTitle && headingTitle.length > 0;\n\n    return titleValid;\n  }\n\n  getOptions() {\n    const allHeaders = structuralMetadataUtils.getItemsOfType(\n      'div',\n      this.props.smData\n    );\n    const options = allHeaders.map(header => (\n      <option value={header.id} key={header.id}>\n        {header.label}\n      </option>\n    ));\n\n    return options;\n  }\n\n  handleCancelClick = () => {\n    this.props.toggleHeading();\n  };\n\n  handleChildOfChange = e => {\n    this.setState({ headingChildOf: e.target.value });\n  };\n\n  handleHeadingChange = e => {\n    this.setState({ headingTitle: e.target.value });\n  };\n\n  handleSubmit = e => {\n    const { headingChildOf, headingTitle } = this.state;\n    let submitItem = { headingChildOf, headingTitle };\n\n    e.preventDefault();\n\n    this.props.onSubmit(submitItem);\n\n    // Clear form\n    this.clearFormValues();\n  };\n\n  processOptions() {\n    const options = this.getOptions();\n    this.setState({ childOfOptions: options });\n  }\n\n  render() {\n    const { headingTitle } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormGroup\n          controlId=\"headingTitle\"\n          validationState={getValidationTitleState(headingTitle)}\n        >\n          <ControlLabel>Title</ControlLabel>\n          <FormControl\n            type=\"text\"\n            value={headingTitle}\n            onChange={this.handleHeadingChange}\n          />\n          <FormControl.Feedback />\n        </FormGroup>\n\n        <FormGroup controlId=\"headingChildOf\">\n          <ControlLabel>Child Of</ControlLabel>\n          <FormControl\n            componentClass=\"select\"\n            placeholder=\"select\"\n            onChange={this.handleChildOfChange}\n            value={this.state.headingChildOf}\n          >\n            <option value=\"\">Select...</option>\n            {this.state.childOfOptions}\n          </FormControl>\n        </FormGroup>\n        <Row>\n          <Col xs={12}>\n            <ButtonToolbar className=\"pull-right\">\n              <Button onClick={this.props.cancelClick}>Cancel</Button>\n              <Button\n                bsStyle=\"primary\"\n                type=\"submit\"\n                disabled={!this.formIsValid()}\n              >\n                Save\n              </Button>\n            </ButtonToolbar>\n          </Col>\n        </Row>\n      </form>\n    );\n  }\n}\n\nHeadingForm.propTypes = {\n  cancelClick: PropTypes.func,\n  onSubmit: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(HeadingForm);\n","import * as types from './types';\n\nexport function addHeading(values) {\n  return {\n    type: types.ADD_HEADING,\n    payload: values\n  };\n}\n\nexport function buildSMUI(json) {\n  return {\n    type: types.BUILD_SM_UI,\n    payload: json\n  };\n}\n\nexport function deleteItem(id) {\n  return {\n    type: types.DELETE_ITEM,\n    id\n  };\n}\n\nexport function addDropTargets(item) {\n  return {\n    type: types.ADD_DROP_TARGETS,\n    payload: item\n  };\n}\n\nexport function removeDropTargets() {\n  return {\n    type: types.REMOVE_DROP_TARGETS\n  };\n}\n\nexport function setActiveDragSource(id) {\n  return {\n    type: types.SET_ACTIVE_DRAG_SOURCE,\n    id\n  };\n}\n\nexport function removeActiveDragSources() {\n  return {\n    type: types.REMOVE_ACTIVE_DRAG_SOURCES\n  };\n}\n\nexport function handleListItemDrop(dragSource, dropTarget) {\n  return {\n    type: types.HANDLE_LIST_ITEM_DROP,\n    dragSource,\n    dropTarget\n  };\n}\n","import React, { Component } from 'react';\nimport HeadingForm from '../components/HeadingForm';\nimport { connect } from 'react-redux';\nimport * as smActions from '../actions/sm-data';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\n\nclass HeadingFormContainer extends Component {\n  state = {\n    message: null\n  };\n\n  submit = values => {\n    const { smData } = this.props;\n    let submittedItem = {\n      headingChildOf: values.headingChildOf,\n      headingTitle: values.headingTitle\n    };\n    let updatedSmData = null;\n\n    // Update the data structure with new heading\n    updatedSmData = structuralMetadataUtils.insertNewHeader(\n      submittedItem,\n      smData\n    );\n\n    // Update redux store\n    this.props.buildSMUI(updatedSmData);\n\n    // Close the form\n    this.props.cancelClick();\n  };\n\n  render() {\n    return <HeadingForm onSubmit={this.submit} cancelClick={this.props.cancelClick} />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  buildSMUI: data => dispatch(smActions.buildSMUI(data))\n});\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeadingFormContainer);\n","import React, { Component } from 'react';\nimport {\n  Button,\n  ButtonToolbar,\n  Col,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Row\n} from 'react-bootstrap';\nimport * as smActions from '../actions/sm-data';\nimport { connect } from 'react-redux';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\nimport {\n  getValidationBeginState,\n  getValidationEndState,\n  getValidationTitleState,\n  isTitleValid,\n  validTimespans\n} from '../services/form-helper';\nimport { isEqual } from 'lodash';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\n\nclass TimespanForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beginTime: '',\n      endTime: '',\n      timespanChildOf: '',\n      timespanTitle: '',\n      validHeadings: []\n    };\n    this.allSpans = null;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { smData } = this.props;\n    if (!isEqual(smData, prevProps.smData)) {\n      this.allSpans = structuralMetadataUtils.getItemsOfType('span', smData);\n    }\n  }\n\n  buildHeadingsOptions = () => {\n    const { smData } = this.props;\n    let newSpan = {\n      begin: this.state.beginTime,\n      end: this.state.endTime\n    };\n\n    // Get spans in overall span list which fall before and after the new span\n    let wrapperSpans = structuralMetadataUtils.findWrapperSpans(\n      newSpan,\n      this.allSpans\n    );\n\n    // Get all valid div headings\n    let validHeadings = structuralMetadataUtils.getValidHeadings(\n      wrapperSpans,\n      smData\n    );\n\n    // Update state with valid headings\n    this.setState({ validHeadings });\n  };\n\n  clearHeadingOptions = () => {\n    this.setState({\n      validHeadings: []\n    });\n  };\n\n  clearFormValues() {\n    this.setState({\n      beginTime: '',\n      endTime: '',\n      timespanChildOf: '',\n      timespanTitle: '',\n      validHeadings: []\n    });\n  }\n\n  formIsValid() {\n    const titleValid = isTitleValid(this.state.timespanTitle);\n    const childOfValid = this.state.timespanChildOf.length > 0;\n    const timesValidResponse = this.localValidTimespans();\n\n    return titleValid && childOfValid && timesValidResponse.valid;\n  }\n\n  handleInputChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { beginTime, endTime, timespanChildOf, timespanTitle } = this.state;\n\n    this.props.onSubmit({\n      beginTime,\n      endTime,\n      timespanChildOf,\n      timespanTitle\n    });\n\n    // Clear form values\n    this.clearFormValues();\n  };\n\n  handleTimeChange = e => {\n    this.setState({ [e.target.id]: e.target.value }, this.updateChildOfOptions);\n  };\n\n  handleCancelClick = () => {\n    // Add the edited item back to data structure\n    if (this.unEditedFormItem !== undefined) {\n      this.props.onSubmit(this.unEditedFormItem);\n    }\n\n    this.props.cancelClick();\n  };\n\n  handleChildOfChange = e => {\n    this.setState({ timespanChildOf: e.target.value });\n  };\n\n  updateChildOfOptions() {\n    const timesValidResponse = this.localValidTimespans();\n\n    if (timesValidResponse.valid) {\n      this.buildHeadingsOptions();\n    } else {\n      this.clearHeadingOptions();\n    }\n  }\n\n  /**\n   * A local wrapper for the reusable function 'validTimespans'\n   */\n  localValidTimespans() {\n    const { beginTime, endTime } = this.state;\n    const { allSpans } = this;\n\n    return validTimespans(beginTime, endTime, allSpans, this.props.smData);\n  }\n\n  render() {\n    const { beginTime, endTime, timespanChildOf, timespanTitle } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormGroup\n          controlId=\"timespanTitle\"\n          validationState={getValidationTitleState(timespanTitle)}\n        >\n          <ControlLabel>Title</ControlLabel>\n          <FormControl\n            type=\"text\"\n            value={timespanTitle}\n            onChange={this.handleInputChange}\n          />\n          <FormControl.Feedback />\n        </FormGroup>\n\n        <Row>\n          <Col sm={6}>\n            <FormGroup\n              controlId=\"beginTime\"\n              validationState={getValidationBeginState(\n                beginTime,\n                this.allSpans\n              )}\n            >\n              <ControlLabel>Begin Time</ControlLabel>\n              <FormControl\n                type=\"text\"\n                value={beginTime}\n                placeholder=\"00:00:00\"\n                onChange={this.handleTimeChange}\n              />\n              <FormControl.Feedback />\n            </FormGroup>\n          </Col>\n          <Col sm={6}>\n            <FormGroup\n              controlId=\"endTime\"\n              validationState={getValidationEndState(\n                beginTime,\n                endTime,\n                this.allSpans\n              )}\n            >\n              <ControlLabel>End Time</ControlLabel>\n              <FormControl\n                type=\"text\"\n                value={endTime}\n                placeholder=\"00:00:00\"\n                onChange={this.handleTimeChange}\n              />\n              <FormControl.Feedback />\n            </FormGroup>\n          </Col>\n        </Row>\n\n        <FormGroup controlId=\"timespanChildOf\">\n          <ControlLabel>Child Of</ControlLabel>\n          <FormControl\n            componentClass=\"select\"\n            placeholder=\"select\"\n            onChange={this.handleChildOfChange}\n            value={timespanChildOf}\n          >\n            <option value=\"\">Select...</option>\n            {this.state.validHeadings.map(item => (\n              <option value={item.id} key={item.id}>\n                {item.label}\n              </option>\n            ))}\n          </FormControl>\n        </FormGroup>\n\n        <Row>\n          <Col xs={12}>\n            <ButtonToolbar className=\"pull-right\">\n              <Button onClick={this.props.cancelClick}>Cancel</Button>\n              <Button\n                bsStyle=\"primary\"\n                type=\"submit\"\n                disabled={!this.formIsValid()}\n              >\n                Save\n              </Button>\n            </ButtonToolbar>\n          </Col>\n        </Row>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteItem: id => dispatch(smActions.deleteItem(id))\n});\n\nTimespanForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimespanForm);\n\nexport default TimespanForm;\n","import React, { Component } from 'react';\nimport TimespanForm from '../components/TimespanForm';\nimport { connect } from 'react-redux';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\nimport * as smActions from '../actions/sm-data';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\nclass TimespanFormContainer extends Component {\n  state = {\n    message: null\n  };\n\n  submit = values => {\n    // Update the data structure with new heading\n    const updatedData = structuralMetadataUtils.insertNewTimespan(\n      values,\n      this.props.smData\n    );\n\n    // Update redux store\n    this.props.buildSMUI(updatedData);\n\n    // Close the form\n    this.props.cancelClick();\n  };\n\n  render() {\n    return (\n      <TimespanForm onSubmit={this.submit} cancelClick={this.props.cancelClick} />\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  buildSMUI: data => dispatch(smActions.buildSMUI(data))\n});\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimespanFormContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col, Collapse, Row } from 'react-bootstrap';\nimport AlertContainer from '../containers/AlertContainer';\nimport HeadingFormContainer from '../containers/HeadingFormContainer';\nimport TimespanFormContainer from '../containers/TimespanFormContainer';\n\nconst styles = {\n  section: {\n    margin: '4rem 0'\n  },\n  well: {\n    marginTop: '1rem'\n  }\n};\n\nclass ButtonSection extends Component {\n  state = {\n    headingOpen: false,\n    timespanOpen: false\n  };\n\n  handleCancelHeadingClick = () => {\n    this.setState({ headingOpen: false });\n  };\n\n  handleCancelTimespanClick = () => {\n    this.setState({ timespanOpen: false });\n  };\n\n  handleHeadingClick = () => {\n    this.setState({\n      headingOpen: true,\n      timespanOpen: false\n    });\n  };\n\n  handleTimeSpanClick = () => {\n    this.setState({ headingOpen: false, timespanOpen: true });\n  };\n\n  render() {\n    return (\n      <section style={styles.section}>\n        <Row>\n          <Col xs={6}>\n            <Button block onClick={this.handleHeadingClick}>\n              Add a Heading\n            </Button>\n          </Col>\n          <Col xs={6}>\n            <Button block onClick={this.handleTimeSpanClick}>\n              Add a Timespan\n            </Button>\n          </Col>\n        </Row>\n\n        <Collapse in={this.state.headingOpen}>\n          <div className=\"well\" style={styles.well}>\n            <HeadingFormContainer\n              cancelClick={this.handleCancelHeadingClick}\n            />\n          </div>\n        </Collapse>\n        <Collapse in={this.state.timespanOpen}>\n          <div className=\"well\" style={styles.well}>\n            <TimespanFormContainer\n              cancelClick={this.handleCancelTimespanClick}\n            />\n          </div>\n        </Collapse>\n        <AlertContainer />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nexport default connect(mapStateToProps)(ButtonSection);\n","export const ItemTypes = {\n  SPAN: 'span'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst tooltip = tip => <Tooltip id=\"tooltip\">{tip}</Tooltip>;\n\nconst ListItemInlineEditControls = props => {\n  return (\n    <div className=\"edit-controls-wrapper\">\n      <OverlayTrigger placement=\"left\" overlay={tooltip('Save')}>\n        <Button\n          bsStyle=\"link\"\n          disabled={!props.formIsValid}\n          onClick={props.handleSaveClick}\n        >\n          <FontAwesomeIcon icon=\"save\" />\n        </Button>\n      </OverlayTrigger>\n      <OverlayTrigger\n        placement=\"right\"\n        overlay={tooltip('Cancel')}\n        onClick={props.handleCancelClick}\n      >\n        <Button bsStyle=\"link\">\n          <FontAwesomeIcon icon=\"minus-circle\" />\n        </Button>\n      </OverlayTrigger>\n    </div>\n  );\n};\n\nListItemInlineEditControls.propTypes = {\n  formIsValid: PropTypes.bool,\n  handleSaveClick: PropTypes.func,\n  handleCancelClick: PropTypes.func\n};\n\nexport default ListItemInlineEditControls;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ControlLabel, Form, FormControl, FormGroup } from 'react-bootstrap';\nimport {\n  getExistingFormValues,\n  getValidationBeginState,\n  getValidationEndState,\n  getValidationTitleState,\n  isTitleValid,\n  validTimespans\n} from '../services/form-helper';\nimport { connect } from 'react-redux';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\nimport { cloneDeep } from 'lodash';\nimport ListItemInlineEditControls from './ListItemInlineEditControls';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\n\nconst styles = {\n  formControl: {\n    margin: '0 5px'\n  }\n};\n\nclass TimespanInlineForm extends Component {\n  constructor(props) {\n    super(props);\n\n    // To implement validation logic on begin and end times, we need to remove the current item\n    // from the stored data\n    this.tempSmData = undefined;\n  }\n\n  static propTypes = {\n    item: PropTypes.object,\n    cancelFn: PropTypes.func,\n    saveFn: PropTypes.func\n  };\n\n  state = {\n    beginTime: '',\n    endTime: '',\n    timespanTitle: ''\n  };\n\n  componentDidMount() {\n    const { smData } = this.props;\n\n    // Get a fresh copy of store data\n    this.tempSmData = cloneDeep(smData);\n\n    // Load existing form values\n    this.setState(getExistingFormValues(this.props.item.id, this.tempSmData));\n\n    // Remove current list item from the data we're doing validation against in this form\n    this.tempSmData = structuralMetadataUtils.deleteListItem(\n      this.props.item.id,\n      this.tempSmData\n    );\n\n    // Save a reference to all the spans for future calculations\n    this.allSpans = structuralMetadataUtils.getItemsOfType(\n      'span',\n      this.tempSmData\n    );\n  }\n\n  formIsValid() {\n    const { beginTime, endTime } = this.state;\n    const titleValid = isTitleValid(this.state.timespanTitle);\n    const timesValidResponse = validTimespans(\n      beginTime,\n      endTime,\n      this.allSpans,\n      this.tempSmData\n    );\n\n    return titleValid && timesValidResponse.valid;\n  }\n\n  handleCancelClick = () => {\n    this.props.cancelFn();\n  };\n\n  handleInputChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSaveClick = () => {\n    const { beginTime, endTime, timespanTitle } = this.state;\n    this.props.saveFn(this.props.item.id, {\n      beginTime,\n      endTime,\n      timespanTitle\n    });\n  };\n\n  render() {\n    const { beginTime, endTime, timespanTitle } = this.state;\n\n    return (\n      <Form inline>\n        <div className=\"row-wrapper\">\n          <div>\n            <FormGroup\n              controlId=\"timespanTitle\"\n              validationState={getValidationTitleState(timespanTitle)}\n            >\n              <ControlLabel>Title</ControlLabel>\n              <FormControl\n                type=\"text\"\n                style={styles.formControl}\n                value={timespanTitle}\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n            <FormGroup\n              controlId=\"beginTime\"\n              validationState={getValidationBeginState(\n                beginTime,\n                this.allSpans\n              )}\n            >\n              <ControlLabel>Begin Time</ControlLabel>\n              <FormControl\n                type=\"text\"\n                style={styles.formControl}\n                value={beginTime}\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n            <FormGroup\n              controlId=\"endTime\"\n              validationState={getValidationEndState(\n                beginTime,\n                endTime,\n                this.allSpans\n              )}\n            >\n              <ControlLabel>End Time</ControlLabel>\n              <FormControl\n                type=\"text\"\n                style={styles.formControl}\n                value={endTime}\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n          </div>\n          <ListItemInlineEditControls\n            formIsValid={this.formIsValid()}\n            handleSaveClick={this.handleSaveClick}\n            handleCancelClick={this.handleCancelClick}\n          />\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nexport default connect(mapStateToProps)(TimespanInlineForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ControlLabel, Form, FormControl, FormGroup } from 'react-bootstrap';\nimport {\n  getExistingFormValues,\n  getValidationTitleState,\n  isTitleValid\n} from '../services/form-helper';\nimport { connect } from 'react-redux';\nimport { cloneDeep } from 'lodash';\nimport ListItemInlineEditControls from './ListItemInlineEditControls';\n\nconst styles = {\n  formControl: {\n    margin: '0 5px',\n    width: '300px'\n  }\n};\n\nclass HeadingInlineForm extends Component {\n  constructor(props) {\n    super(props);\n\n    // To implement validation logic on begin and end times, we need to remove the current item\n    // from the stored data\n    this.tempSmData = undefined;\n  }\n\n  static propTypes = {\n    item: PropTypes.object,\n    cancelFn: PropTypes.func,\n    saveFn: PropTypes.func\n  };\n\n  state = {\n    headingTitle: ''\n  };\n\n  componentDidMount() {\n    const { smData } = this.props;\n\n    // Get a fresh copy of store data\n    this.tempSmData = cloneDeep(smData);\n\n    // Load existing form values\n    this.setState(getExistingFormValues(this.props.item.id, this.tempSmData));\n  }\n\n  formIsValid() {\n    return isTitleValid(this.state.headingTitle);\n  }\n\n  handleCancelClick = () => {\n    this.props.cancelFn();\n  };\n\n  handleInputChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSaveClick = () => {\n    const { headingTitle } = this.state;\n    this.props.saveFn(this.props.item.id, {\n      headingTitle\n    });\n  };\n\n  render() {\n    const { headingTitle } = this.state;\n\n    return (\n      <Form inline>\n        <div className=\"row-wrapper\">\n          <div>\n            <FormGroup\n              controlId=\"headingTitle\"\n              validationState={getValidationTitleState(headingTitle)}\n            >\n              <ControlLabel>Title</ControlLabel>\n              <FormControl\n                type=\"text\"\n                style={styles.formControl}\n                value={headingTitle}\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n          </div>\n          <ListItemInlineEditControls\n            formIsValid={this.formIsValid()}\n            handleSaveClick={this.handleSaveClick}\n            handleCancelClick={this.handleCancelClick}\n          />\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nexport default connect(mapStateToProps)(HeadingInlineForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TimespanInlineForm from './TimespanInlineForm';\nimport HeadingInlineForm from './HeadingInlineForm';\nimport { buildSMUI } from '../actions/sm-data';\nimport { cloneDeep } from 'lodash';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\n\nclass ListItemEditForm extends Component {\n  constructor(props) {\n    super(props);\n    this.type = this.props.item.type;\n    this.id = this.props.item.id;\n  }\n\n  static propTypes = {\n    handleEditFormCancel: PropTypes.func,\n    item: PropTypes.object.isRequired\n  };\n\n  addUpdatedValues(item, payload) {\n    if (item.type === 'div') {\n      item.label = payload.headingTitle;\n    } else if (item.type === 'span') {\n      item.label = payload.timespanTitle;\n      item.begin = payload.beginTime;\n      item.end = payload.endTime;\n    }\n\n    return item;\n  }\n\n  handleCancelClick = e => {\n    this.props.handleEditFormCancel();\n  };\n\n  handleSaveClick = (id, payload) => {\n    // Clone smData\n    let clonedItems = cloneDeep(this.props.smData);\n\n    // Get the original item\n    /* eslint-disable */\n    let item = structuralMetadataUtils.findItem(id, clonedItems);\n    /* eslint-enable */\n\n    // Update item values\n    item = this.addUpdatedValues(item, payload);\n\n    // Send updated smData back to redux\n    this.props.buildSMUI(clonedItems);\n\n    // Turn off editing state\n    this.props.handleEditFormCancel();\n  };\n\n  render() {\n    const { item } = this.props;\n\n    if (item.type === 'span') {\n      return (\n        <TimespanInlineForm\n          item={item}\n          cancelFn={this.handleCancelClick}\n          saveFn={this.handleSaveClick}\n        />\n      );\n    }\n\n    if (item.type === 'div') {\n      return (\n        <HeadingInlineForm\n          item={item}\n          cancelFn={this.handleCancelClick}\n          saveFn={this.handleSaveClick}\n        />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nconst mapDispathToProps = dispatch => ({\n  buildSMUI: json => dispatch(buildSMUI(json))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps\n)(ListItemEditForm);\n","import React from 'react';\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst tooltip = tip => <Tooltip id=\"tooltip\">{tip}</Tooltip>;\n\nconst ListItemControls = props => {\n  return (\n    <div className=\"edit-controls-wrapper\">\n      {props.itemType === 'span' && (\n        <OverlayTrigger placement=\"left\" overlay={tooltip('Show drop targets')}>\n          <Button bsStyle=\"link\">\n            <FontAwesomeIcon\n              icon=\"dot-circle\"\n              onClick={props.handleShowDropTargetsClick}\n            />\n          </Button>\n        </OverlayTrigger>\n      )}\n      <OverlayTrigger placement=\"top\" overlay={tooltip('Edit')}>\n        <Button bsStyle=\"link\">\n          <FontAwesomeIcon icon=\"pen\" onClick={props.handleEditClick} />\n        </Button>\n      </OverlayTrigger>\n      <OverlayTrigger placement=\"right\" overlay={tooltip('Delete')}>\n        <Button bsStyle=\"link\">\n          <FontAwesomeIcon icon=\"trash\" onClick={props.handleDelete} />\n        </Button>\n      </OverlayTrigger>\n    </div>\n  );\n};\n\nListItemControls.propTypes = {\n  handleShowDropTargetsClick: PropTypes.func,\n  handleEditClick: PropTypes.func,\n  handleDelete: PropTypes.func,\n  itemType: PropTypes.string\n};\n\nexport default ListItemControls;\n","import React, { Component } from 'react';\nimport List from './List';\nimport { connect } from 'react-redux';\nimport * as smActions from '../actions/sm-data';\nimport PropTypes from 'prop-types';\nimport { ItemTypes } from '../services/Constants';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport ListItemEditForm from './ListItemEditForm';\nimport ListItemControls from './ListItemControls';\n\nconst spanSource = {\n  beginDrag(props) {\n    return { id: props.item.id };\n  }\n};\n\nconst spanTarget = {\n  canDrop(props, monitor) {\n    // You can disallow drop based on props or item\n    return true;\n  }\n};\n\nfunction collectDrag(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nfunction collectDrop(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    // You can ask the monitor about the current drag state:\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop(),\n    itemType: monitor.getItemType()\n  };\n}\n\nclass ListItem extends Component {\n  static propTypes = {\n    item: PropTypes.shape({\n      active: PropTypes.bool,\n      begin: PropTypes.string,\n      end: PropTypes.string,\n      items: PropTypes.array,\n      id: PropTypes.string,\n      type: PropTypes.string\n    })\n  };\n\n  state = {\n    editing: false\n  };\n\n  handleDelete = () => {\n    this.props.deleteItem(this.props.item.id);\n  };\n\n  handleEditClick = () => {\n    /* eslint-disable */\n    const { id, type } = this.props.item;\n    /* eslint-enable */\n\n    this.setState({ editing: true });\n  };\n\n  handleEditFormCancel = () => {\n    this.setState({ editing: false });\n  };\n\n  handleShowDropTargetsClick = () => {\n    const {\n      addDropTargets,\n      item,\n      removeActiveDragSources,\n      removeDropTargets,\n      setActiveDragSource\n    } = this.props;\n\n    // Clear out any current drop targets\n    removeDropTargets();\n\n    // Handle closing of current drag source drop targets, and exit with a clean UI.\n    if (item.active === true) {\n      // Clear out any active drag sources\n      removeActiveDragSources();\n      return;\n    }\n    // Clear out any active drag sources\n    removeActiveDragSources();\n\n    // Calculate possible drop targets\n    addDropTargets(item);\n\n    // Redux way of setting active drag list item\n    setActiveDragSource(item.id);\n  };\n\n  render() {\n    const {\n      item,\n      item: { begin },\n      item: { end },\n      item: { items },\n      item: { label },\n      item: { type },\n      item: { active },\n      connectDragSource,\n      connectDropTarget\n    } = this.props;\n\n    const subMenu = items && items.length > 0 ? <List items={items} /> : null;\n\n    return connectDragSource(\n      connectDropTarget(\n        <li className={active ? 'active' : ''}>\n          {this.state.editing && (\n            <ListItemEditForm\n              item={item}\n              handleEditFormCancel={this.handleEditFormCancel}\n            />\n          )}\n\n          {!this.state.editing && (\n            <div className=\"row-wrapper\">\n              {type === 'span' && (\n                <span className=\"structure-title\">\n                  {label} ({begin} - {end})\n                </span>\n              )}\n              {type === 'div' && (\n                <div className=\"structure-title heading\">{label}</div>\n              )}\n              <ListItemControls\n                handleDelete={this.handleDelete}\n                handleEditClick={this.handleEditClick}\n                itemType={type}\n                handleShowDropTargetsClick={this.handleShowDropTargetsClick}\n              />\n            </div>\n          )}\n\n          {subMenu}\n        </li>\n      )\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  deleteItem: smActions.deleteItem,\n  addDropTargets: smActions.addDropTargets,\n  removeDropTargets: smActions.removeDropTargets,\n  removeActiveDragSources: smActions.removeActiveDragSources,\n  setActiveDragSource: smActions.setActiveDragSource\n};\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nconst ConnectedDropTarget = DropTarget(ItemTypes.SPAN, spanTarget, collectDrop);\nconst ConnectedDragSource = DragSource(ItemTypes.SPAN, spanSource, collectDrag);\nconst DragConnected = ConnectedDropTarget(ConnectedDragSource(ListItem));\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DragConnected);\n","import React, { Component } from 'react';\nimport { DropTarget } from 'react-dnd';\nimport { ItemTypes } from '../services/Constants';\nimport { connect } from 'react-redux';\nimport * as smActions from '../actions/sm-data';\n\nconst styles = {\n  li: {\n    border: '2px #999 dashed',\n    opacity: 0.3\n  },\n  liHovered: {\n    border: '5px #999 dashed',\n    opacity: 0.5\n  }\n};\n\nconst optionalTarget = {\n  hover(props, monitor, component) {\n    //console.log('hover over drop target');\n  },\n\n  drop(props, monitor, component) {\n    let dragItem = monitor.getItem();\n\n    props.handleListItemDrop(dragItem, props.item);\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    // Call this function inside render()\n    // to let React DnD handle the drag events:\n    connectDropTarget: connect.dropTarget(),\n    // You can ask the monitor about the current drag state:\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop(),\n    itemType: monitor.getItemType()\n  };\n}\n\nclass PlaceholderItem extends Component {\n  render() {\n    const { isOver, connectDropTarget } = this.props;\n\n    return connectDropTarget(\n      <li className=\"row-wrapper\" style={isOver ? styles.liHovered : styles.li}>\n        Drop here\n      </li>\n    );\n  }\n}\n\nconst ConnectedDropTarget = DropTarget(ItemTypes.SPAN, optionalTarget, collect)(\n  PlaceholderItem\n);\n\nconst mapDispatchToProps = dispatch => ({\n  handleListItemDrop: (dragItem, dropItem) =>\n    dispatch(smActions.handleListItemDrop(dragItem, dropItem))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ConnectedDropTarget);\n","import React from 'react';\nimport ListItem from './ListItem';\nimport PlaceholderItem from './PlaceholderItem';\n\nconst List = props => {\n  return (\n    <ul className=\"structure-list\">\n      {props.items.map((item, i) => {\n        if (!item) {\n          return null;\n        }\n        if (item.type === 'optional') {\n          return <PlaceholderItem key={i} item={item} />\n        }\n        return <ListItem key={item.id} item={item} />;\n      })}\n    </ul>\n  );\n}\n\nexport default List;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/sm-data';\nimport APIUtils from '../api/Utils';\nimport * as showFormActions from '../actions/show-forms';\nimport uuidv1 from 'uuid/v1';\n\nconst apiUtils = new APIUtils();\n\nclass GenerateStructureContainer extends Component {\n  async componentDidMount() {\n    try {\n      const response = await apiUtils.getRequest('structure.json');\n      let structureJS = response.data;\n\n      // Add unique ids to every object\n      let smData = this.addIds([structureJS]);\n\n      // Update the redux store\n      this.props.buildSMUI(smData);\n    } catch (error) {\n      if (error.response !== undefined) {\n        this.props.handleResponse(error.response.status);\n      } else if (error.request !== undefined) {\n        this.props.handleResponse(error.request.status);\n      } else {\n        this.props.handleResponse(-1);\n      }\n    }\n  }\n\n  /**\n   * This function adds a unique, front-end only id, to every object in the data structure\n   * @param {Array} structureJS\n   * @returns {Array}\n   */\n  addIds(structureJS) {\n    let structureWithIds = [...structureJS];\n\n    // Recursively loop through data structure\n    let fn = items => {\n      for (let item of items) {\n        // Create and add an id\n        item.id = uuidv1();\n\n        // Send child items back into the function\n        if (item.items && item.items.length > 0) {\n          fn(item.items);\n        }\n      }\n    };\n\n    fn(structureWithIds);\n\n    return structureWithIds;\n  }\n\n  render() {\n    return null;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  buildSMUI: smData => dispatch(actions.buildSMUI(smData)),\n  handleResponse: statusCode =>\n    dispatch(showFormActions.handleResponse(statusCode))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(GenerateStructureContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport List from '../components/List';\nimport GenerateStructureContainer from './GenerateStructureContainer';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport * as actions from '../actions/show-forms';\nimport APIUtils from '../api/Utils';\n\nconst apiUtils = new APIUtils();\n\nclass StructureOutputContainer extends Component {\n  handleSaveItClick = () => {\n    let postData = { json: this.props.smData[0] };\n    apiUtils\n      .postRequest('structure.json', postData)\n      .then(response => {\n        this.props.handleResponse(response.status, response.statusText);\n      })\n      .catch(error => {\n        if (error.response !== undefined) {\n          this.props.handleResponse(error.response.status);\n        } else {\n          this.props.handleResponse(error.request.status);\n        }\n      });\n  };\n\n  render() {\n    const { smData = [] } = this.props;\n\n    return (\n      <section>\n        <h3>HTML Structure Tree from a masterfile in server</h3>\n        <br />\n        <GenerateStructureContainer />\n        <List items={smData} />\n        <Row>\n          <Col xs={12} className=\"text-right\">\n            <Button bsStyle=\"primary\" onClick={this.handleSaveItClick}>\n              Save Structure\n            </Button>\n          </Col>\n        </Row>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nexport default connect(mapStateToProps, actions)(StructureOutputContainer);\n","import React, { Component } from 'react';\nimport './App.css';\nimport WaveformContainer from './containers/WaveformContainer';\nimport ButtonSection from './components/ButtonSection';\nimport StructureOutputContainer from './containers/StructureOutputContainer';\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\n// Font Awesome Imports\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faDotCircle,\n  faMinusCircle,\n  faPen,\n  faSave,\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faDotCircle, faMinusCircle, faPen, faSave, faTrash);\n\nclass App extends Component {\n  render() {\n    return (\n      <DragDropContextProvider backend={HTML5Backend}>\n        <div className=\"container\">\n          <h1>Test Structural Metadata Editor</h1>\n          <WaveformContainer />\n          <ButtonSection />\n          <StructureOutputContainer />\n        </div>\n      </DragDropContextProvider>\n    );\n  }\n}\n\nexport default App;\n","import * as types from '../actions/types';\n\nconst initialState = {\n  alert: false\n};\n\nconst showForms = (state = initialState, action) => {\n  switch (action.type) {\n    case types.API_RESPONSE:\n      return Object.assign({}, state, {\n        statusCode: action.code,\n        alert: true\n      });\n\n    case types.CLOSE_ALERT:\n      return Object.assign({}, state, {\n        alert: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default showForms;\n","import * as types from '../actions/types';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\n\nconst structrualMetadataUtils = new StructuralMetadataUtils();\nconst initialState = [];\nlet stateClone = null;\nlet newState = null;\n\nconst smData = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADD_HEADING:\n      stateClone = [...state];\n      stateClone.push(action.payload);\n      return stateClone;\n\n    case types.BUILD_SM_UI:\n      return action.payload;\n\n    case types.DELETE_ITEM:\n      return structrualMetadataUtils.deleteListItem(action.id, [...state]);\n\n    case types.ADD_DROP_TARGETS:\n      newState = structrualMetadataUtils.determineDropTargets(action.payload, [...state]);\n      return newState;\n\n    case types.REMOVE_DROP_TARGETS:\n      let noDropTargetsState = structrualMetadataUtils.removeDropTargets([...state]);\n      return noDropTargetsState;\n\n    case types.SET_ACTIVE_DRAG_SOURCE:\n      stateClone = [...state];\n      let target = structrualMetadataUtils.findItem(\n        action.id,\n        stateClone\n      );\n      // Put an active flag on list item\n      target.active = true;\n      return stateClone;\n\n    case types.REMOVE_ACTIVE_DRAG_SOURCES:\n      let noActiveDragSourcesState = structrualMetadataUtils.removeActiveDragSources(\n        state\n      );\n      return noActiveDragSourcesState;\n\n    case types.HANDLE_LIST_ITEM_DROP:\n      newState = structrualMetadataUtils.handleListItemDrop(\n        action.dragSource,\n        action.dropTarget,\n        state\n      );\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default smData;\n","import StructuralMetadataUtils from './StructuralMetadataUtils';\nimport Peaks from 'peaks.js';\n\nconst structMetadataUtils = new StructuralMetadataUtils();\n\n// Colors for segments from Avalon branding pallette\nconst colors = ['#80A590', '#2A5459'];\n\nexport default class WaveformDataUtils {\n  initPeaks(smData, options) {\n    let initSegments = [];\n    let count = 0;\n\n    // Recursively build segments for timespans in the structure\n    let createSegment = items => {\n      for (let item of items) {\n        if (item.type === 'span') {\n          count = count > 1 ? 0 : count;\n          const { begin, end, label, id } = item;\n          initSegments.push({\n            startTime: structMetadataUtils.toMs(begin) / 1000,\n            endTime: structMetadataUtils.toMs(end) / 1000,\n            editable: false,\n            labelText: label,\n            id: id,\n            color: colors[count]\n          });\n          count++;\n        }\n        if (item.items && item.items.length > 0) {\n          createSegment(item.items);\n        }\n      }\n    };\n\n    // Build segments from initial metadata structure\n    createSegment(smData);\n\n    // Initialize peaks instance\n    let peaksInstance = Peaks.init({\n      ...options,\n      segments: initSegments\n    });\n\n    return peaksInstance;\n  }\n}\n","import * as types from '../actions/types';\nimport WaveformDataUtils from '../services/WaveformDataUtils';\n\nconst waveformUtils = new WaveformDataUtils();\nconst initialState = {};\n\nconst peaksInstance = (state = initialState, action) => {\n  switch (action.type) {\n    case types.INIT_PEAKS:\n      return waveformUtils.initPeaks(action.smData, action.options);\n\n    default:\n      return state;\n  }\n};\n\nexport default peaksInstance;\n","import { combineReducers } from 'redux';\nimport showForms from './show-forms';\nimport smData from './sm-data';\nimport peaksInstance from './peaks-instance';\n\nexport default combineReducers({\n  showForms,\n  smData,\n  peaksInstance\n});\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}