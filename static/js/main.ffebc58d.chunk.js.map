{"version":3,"sources":["data/TOL_6min_720p_download.mp3","data/TOL_6min_720p_download.ogg","data/TOL_6min_720p_download.dat","components/Waveform.js","actions/types.js","actions/show-forms.js","components/ButtonSection.js","actions/sm-data.js","containers/SampleGenerateButtonContainer.js","services/Constants.js","components/ListItem.js","components/PlaceholderItem.js","components/List.js","services/StructuralMetadataUtils.js","components/HeadingForm.js","containers/HeadingFormContainer.js","components/TimespanForm.js","containers/TimespanFormContainer.js","containers/ModalContainer.js","containers/StructureOutputContainer.js","App.js","reducers/show-forms.js","reducers/sm-data.js","reducers/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","peaksOptions","container","mediaElement","dataUri","arraybuffer","soundDAT","json","soundJSON","keyboard","pointMarkerColor","showPlayheadTime","Waveform","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","zoomIn","peaksInstance","zoom","zoomOut","seekTime","timeInSeconds","parseFloat","state","Number","isNaN","player","seek","waveformContainer","React","createRef","mediaPlayer","handleChange","bind","assertThisInitialized","current","Peaks","init","event","setState","target","value","react_default","a","createElement","className","id","ref","Row","Col","xs","md","controls","src","soundMP3","type","soundOGG","Form","inline","FormGroup","ButtonToolbar","Button","onClick","FormControl","onChange","placeholder","Component","ADD_HEADING","BUILD_SM_UI","DELETE_ITEM","ADD_DROP_TARGETS","REMOVE_DROP_TARGETS","SET_ACTIVE_DRAG_SOURCE","REMOVE_ACTIVE_DRAG_SOURCES","HANDLE_LIST_ITEM_DROP","toggleHeading","show","mode","arguments","length","undefined","label","toggleTimespan","showModal","listItemType","closeModal","ButtonSection","handleHeadingClick","handleTimeSpanClick","connect","showForms","actions","buildSMUI","types","payload","deleteItem","item","SampleGenerateButtonContainer","handleBuildItClick","smData","structuralTree","href","dispatch","ItemTypes","spanSource","beginDrag","console","log","EditControls","itemType","index_es","icon","handleShowDropTargetsClick","handleEditClick","handleDelete","ListItem","_this$props$item","_this$props","addDropTargets","removeActiveDragSources","removeDropTargets","setActiveDragSource","active","_this$props2","begin","end","items","connectDragSource","connectDropTarget","subMenu","components_List","ListItem_EditControls","mapDispatchToProps","smActions","showFormActions","DragConnected","DropTarget","canDrop","monitor","hover","component","getItem","dropTarget","isOver","isOverCurrent","shallow","getItemType","ConnectedDropTarget","DragSource","dragSource","isDragging","ConnectedDragSource","styles","li","border","opacity","liHovered","PlaceholderItem","style","drop","dragItem","handleListItemDrop","dropItem","List","map","i","components_PlaceholderItem","key","components_ListItem","StructuralMetadataUtils","dndHelper","addSpanAfter","clonedItems","wrapperSpanAfter","afterParent","getParentDiv","afterIndex","indexOf","splice","createDropZoneObject","stuckInMiddle","spanIndex","siblings","parentDiv","uuidv1","obj","timespanTitle","beginTime","endTime","allItems","toConsumableArray","indexToDelete","_","findIndex","wrapperSpans","findWrapperSpans","getItemsOfType","sibling","push","unshift","grandParentDiv","parentIndex","before","beforeParent","beforeIndex","after","time","allSpans","toMs","valid","spanBegin","spanEnd","filteredSpans","filter","span","foundItem","findItem","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","newSpan","spansBefore","spansAfter","options","getItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","currentObj","objectSpread","child","foundDiv","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","currentChild","validHeadings","findSpanItem","targetSpan","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","childItem","itemToMove","findItemByLabel","itemToMoveParent","itemToMoveItemIndex","dropTargetParent","dropTargetItemIndex","targetLabel","headingChildOf","headingTitle","timespanChildOf","spanObj","createSpanObject","insertIndex","childSpans","removeActive","parent","removeFromTree","childTypeToRemove","strTime","moment","duration","asMilliseconds","structuralMetadataUtils","HeadingForm","childOfOptions","handleCancelClick","handleChildOfChange","e","handleHeadingChange","handleSubmit","preventDefault","_this$state","onSubmit","unEditedItem","getOptions","loadExistingValues","header","Modal","Header","closeButton","Title","Body","controlId","validationState","getValidationTitleState","ControlLabel","Feedback","componentClass","Footer","bsStyle","disabled","formIsValid","HeadingFormContainer","message","submit","values","newItem","deleteListItem","updatedData","insertNewHeader","components_HeadingForm","data","showFormsActions","TimespanForm","buildHeadingsOptions","getValidHeadings","clearHeadingOptions","handleInputChange","defineProperty","handleTimeChange","updateChildOfOptions","unEdiunEditedFormItemtedItem","unEditedFormItem","smItem","titleValid","childOfValid","timesValidResponse","validTimespans","validFormat","validTimeFormat","validBeginTime","doesTimeOverlap","_this$state2","validEndTime","validOrdering","validateBeforeEndTimeOrder","doesTimespanOverlap","_this$state3","split","_this$state4","sm","getValidationBeginState","getValidationEndState","TimespanFormContainer","insertNewTimespan","components_TimespanForm","ModalContainer","modal","onHide","containers_HeadingFormContainer","containers_TimespanFormContainer","formActions","StructureOutputContainer","_this$props$smData","containers_ModalContainer","library","add","faDotCircle","faPen","faTrash","App","lib","backend","HTML5Backend","components_Waveform","containers_SampleGenerateButtonContainer","components_ButtonSection","containers_StructureOutputContainer","initialState","heading","timespan","action","assign","structrualMetadataUtils","stateClone","determineDropTargets","combineReducers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","store","createStore","rootReducer","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ffebc58d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TOL_6min_720p_download.28e8286f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/TOL_6min_720p_download.864bd2ae.ogg\";","module.exports = __webpack_public_path__ + \"static/media/TOL_6min_720p_download.3a6daa2a.dat\";","import React, { Component } from \"react\";\nimport Peaks from \"peaks.js\";\nimport { Button, ButtonToolbar, FormControl, FormGroup, Form, Row, Col } from \"react-bootstrap\";\n\nimport soundMP3 from \"../data/TOL_6min_720p_download.mp3\";\nimport soundOGG from \"../data/TOL_6min_720p_download.ogg\";\nimport soundJSON from \"../data/TOL_6min_720p_download.json\";\nimport soundDAT from \"../data/TOL_6min_720p_download.dat\";\n\nconst peaksOptions = {\n  container: null,\n  mediaElement: null,\n  dataUri: {\n    arraybuffer: soundDAT,\n    json: soundJSON\n  },\n  keyboard: true,\n  pointMarkerColor: \"#006eb0\",\n  showPlayheadTime: true\n};\n\nclass Waveform extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seekTime: \"\"\n    };\n\n    this.peaksInstance = null;\n\n    // Create refs here\n    this.waveformContainer = React.createRef();\n    this.mediaPlayer = React.createRef();\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // Grab the React `refs` now that the component has mounted\n    peaksOptions.container = this.waveformContainer.current;\n    peaksOptions.mediaElement = this.mediaPlayer.current;\n\n    // Initialize Peaks\n    this.peaksInstance = Peaks.init(peaksOptions);\n  }\n\n  zoomIn = () => {\n    this.peaksInstance.zoom.zoomIn();\n  };\n\n  zoomOut = () => {\n    this.peaksInstance.zoom.zoomOut();\n  };\n\n  handleChange(event) {\n    this.setState({\n      seekTime: event.target.value\n    });\n  }\n\n  seekTime = () => {\n    const timeInSeconds = parseFloat(this.state.seekTime);\n    if (!Number.isNaN(timeInSeconds)) {\n      this.peaksInstance.player.seek(timeInSeconds);\n    }\n  };\n\n  render() {\n    return (\n      <section className=\"waveform-section\">\n        <div id=\"waveform-container\" ref={this.waveformContainer} />\n        <Row>\n          <Col xs={12} md={6}>\n            <audio controls ref={this.mediaPlayer}>\n              <source src={soundMP3} type=\"audio/mp3\" />\n              <source src={soundOGG} type=\"audio/ogg\" />\n              Your browser does not support the audio element.\n            </audio>\n          </Col>\n          <Col xs={12} md={6} className=\"text-right\">\n            <Form inline>\n              <FormGroup>\n                <ButtonToolbar>\n                  <Button onClick={this.zoomIn}>Zoom in</Button>\n                  <Button onClick={this.zoomOut}>Zoom out</Button>\n                </ButtonToolbar>\n              </FormGroup>{' '}\n              <FormControl\n                className=\"form-control\"\n                type=\"text\"\n                value={this.state.seekTime}\n                onChange={this.handleChange}\n                placeholder=\"0\"\n              />{' '}\n              <Button onClick={this.seekTime}>Seek</Button>\n            </Form>\n          </Col>\n        </Row>\n      </section>\n    );\n  }\n}\n\nexport default Waveform;\n","export const TOGGLE_HEADING_FORM = 'TOGGLE_HEADING_FORM';\nexport const TOGGLE_TIMESPAN_FORM = 'TOGGLE_TIMESPAN_FORM';\nexport const ADD_HEADING = 'ADD_HEADING';\nexport const EDIT_HEADING = 'EDIT_HEADING';\nexport const ADD_TIME_SPAN = 'ADD_TIME_SPAN';\nexport const EDIT_TIME_SPAN = 'EDIT_TIME_SPAN';\nexport const BUILD_SM_UI = 'BUILD_SM_UI';\n\nexport const DELETE_ITEM = 'DELETE_ITEM';\n\nexport const ADD_DROP_TARGETS = 'ADD_DROP_TARGETS';\nexport const REMOVE_DROP_TARGETS = 'REMOVE_DROP_TARGETS';\nexport const SET_ACTIVE_DRAG_SOURCE = \"SET_ACTIVE_DRAG_SOURCE\";\nexport const REMOVE_ACTIVE_DRAG_SOURCES = \"REMOVE_ACTIVE_DRAG_SOURCES\";\nexport const HANDLE_LIST_ITEM_DROP = \"HANDLE_LIST_ITEM_DROP\";\n\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\nexport const SAVE_MODAL_RECORD = 'SAVE_MODAL_RECORD';\n\n","import * as types from './types';\n\n/**\n * Redux action creator to toggleHeading\n * @param {Boolean} show show or hide the form\n * @param {*} mode 'ADD' or 'EDIT'\n * @param {*} label If 'EDIT', label is the key by which we'll retrieve the item from the data structure\n */\nexport const toggleHeading = (show, mode='ADD', label) => ({\n  type: types.TOGGLE_HEADING_FORM,\n  show,\n  mode,\n  label\n});\n\nexport const toggleTimespan = (show, mode='ADD') => ({\n  type: types.TOGGLE_TIMESPAN_FORM,\n  show,\n  mode\n});\n\n/**\n * Action creator to show a modal\n * @param {String} mode - 'EDIT' or 'ADD'\n * @param {String} listItemType - span or div\n * @param {String} label - list item label\n */\nexport const showModal = (mode = 'ADD', listItemType, label) => ({\n  type: types.SHOW_MODAL,\n  label,\n  listItemType,\n  mode\n});\n\nexport const closeModal = () => ({\n  type: types.CLOSE_MODAL\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/show-forms';\nimport { ButtonToolbar, Button } from 'react-bootstrap';\n\nclass ButtonSection extends Component {\n  handleHeadingClick = () => {\n    this.props.showModal('ADD', 'div');\n  }\n\n  handleTimeSpanClick = () => {\n    this.props.showModal('ADD', 'span');\n  }\n\n  render() {\n    return (\n      <section className=\"button-section\">\n        <hr />\n        <ButtonToolbar>\n          <Button onClick={this.handleHeadingClick}>Add a Heading</Button>\n          <Button onClick={this.handleTimeSpanClick}>Add a Timespan</Button>\n        </ButtonToolbar>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showForms: state.showForms\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(ButtonSection);\n","import * as types from './types';\n\nexport function addHeading(values) {\n  return {\n    type: types.ADD_HEADING,\n    payload: values\n  };\n}\n\nexport function buildSMUI(json) {\n  return {\n    type: types.BUILD_SM_UI,\n    payload: json\n  };\n}\n\nexport function deleteItem(item) {\n  return {\n    type: types.DELETE_ITEM,\n    payload: item\n  };\n}\n\nexport function addDropTargets(item) {\n  return {\n    type: types.ADD_DROP_TARGETS,\n    payload: item\n  };\n}\n\nexport function removeDropTargets() {\n  return {\n    type: types.REMOVE_DROP_TARGETS\n  };\n}\n\nexport function setActiveDragSource(label) {\n  return {\n    type: types.SET_ACTIVE_DRAG_SOURCE,\n    label\n  };\n}\n\nexport function removeActiveDragSources() {\n  return {\n    type: types.REMOVE_ACTIVE_DRAG_SOURCES\n  };\n}\n\nexport function handleListItemDrop(dragSource, dropTarget) {\n  return {\n    type: types.HANDLE_LIST_ITEM_DROP,\n    dragSource,\n    dropTarget\n  };\n}\n","import React, { Component} from 'react';\nimport structuralTree from '../data/sample-json3-edited.json';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/sm-data';\n\nclass SampleGenerateButtonContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.smData = structuralTree;\n  }\n\n  handleBuildItClick = () => {\n    this.props.buildSMUI(this.smData);\n  }\n\n  render() {\n    return (\n      <section className=\"demo-html-structure-tree\">\n        <hr />\n        <h4>HTML Structure Tree from hardcoded JSON</h4>\n        <p><a href=\"../data/sample-json3.json\" target=\"_blank\">Uses this JSON file</a></p>\n        <button onClick={this.handleBuildItClick} className=\"btn btn-default build-structure-button\">Build It</button>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  buildSMUI: smData => dispatch(actions.buildSMUI(smData))\n})\n\nexport default connect(null, mapDispatchToProps)(SampleGenerateButtonContainer);\n","export const ItemTypes = {\n  SPAN: 'span'\n};\n","import React, { Component } from 'react';\nimport List from './List';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\nimport * as smActions from '../actions/sm-data';\nimport * as showFormActions from '../actions/show-forms';\nimport PropTypes from 'prop-types';\nimport { ItemTypes } from '../services/Constants';\nimport { DragSource, DropTarget } from 'react-dnd';\n\nconst spanSource = {\n  beginDrag(props) {\n    console.log('props', props);\n    return { label: props.item.label };\n  }\n};\n\nconst spanTarget = {\n  canDrop(props, monitor) {\n    // You can disallow drop based on props or item\n    return true;\n  },\n\n  hover(props, monitor, component) {\n    // This is fired very often and lets you perform side effects\n    // in response to the hover. You can't handle enter and leave\n    // here—if you need them, put monitor.isOver() into collect() so you\n    // can just use componentDidUpdate() to handle enter/leave.\n\n    const draggedLabel = monitor.getItem().label;\n\n    if (draggedLabel !== props.item.label) {\n    } else {\n    }\n\n    // You will receive hover() even for items for which canDrop() is false\n    //const canDrop = monitor.canDrop();\n  }\n};\n\nfunction collectDrag(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nfunction collectDrop(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    // You can ask the monitor about the current drag state:\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop(),\n    itemType: monitor.getItemType()\n  };\n}\n\nconst EditControls = props => {\n  return (\n    <div className=\"edit-controls-wrapper\">\n      {props.itemType === 'span' && (\n        <FontAwesomeIcon\n          icon=\"dot-circle\"\n          onClick={props.handleShowDropTargetsClick}\n        />\n      )}\n      <FontAwesomeIcon icon=\"pen\" onClick={props.handleEditClick} />\n      <FontAwesomeIcon icon=\"trash\" onClick={props.handleDelete} />\n    </div>\n  );\n};\n\nclass ListItem extends Component {\n  static propTypes = {\n    item: PropTypes.shape({\n      active: PropTypes.bool,\n      begin: PropTypes.string,\n      end: PropTypes.string,\n      items: PropTypes.array,\n      label: PropTypes.string,\n      type: PropTypes.string\n    })\n  };\n\n  handleDelete = () => {\n    this.props.deleteItem(this.props.item);\n  };\n\n  handleEditClick = () => {\n    const { label, type } = this.props.item;\n\n    this.props.showModal('EDIT', type, label);\n  };\n\n  handleShowDropTargetsClick = () => {\n    const {\n      addDropTargets,\n      item,\n      removeActiveDragSources,\n      removeDropTargets,\n      setActiveDragSource\n    } = this.props;\n\n    // Clear out any current drop targets\n    removeDropTargets();\n\n    // Handle closing of current drag source drop targets, and exit with a clean UI.\n    if (item.active === true) {\n      // Clear out any active drag sources\n      removeActiveDragSources();\n      return;\n    }\n    // Clear out any active drag sources\n    removeActiveDragSources();\n\n    // Calculate possible drop targets\n    addDropTargets(item);\n\n    // Redux way of setting active drag list item\n    setActiveDragSource(item.label);\n  };\n\n  render() {\n    const {\n      item: { begin },\n      item: { end },\n      item: { items },\n      item: { label },\n      item: { type },\n      item: { active },\n      connectDragSource,\n      connectDropTarget\n    } = this.props;\n\n    const subMenu = items && items.length > 0 ? <List items={items} /> : null;\n\n    return connectDragSource(\n      connectDropTarget(\n        <li className={active ? 'active' : ''}>\n          <div className=\"row-wrapper\">\n            {type === 'span' && (\n              <span className=\"structure-title\">\n                {label} ({begin} - {end})\n              </span>\n            )}\n            {type === 'div' && (\n              <div className=\"structure-title heading\">{label}</div>\n            )}\n            <EditControls\n              handleDelete={this.handleDelete}\n              handleEditClick={this.handleEditClick}\n              itemType={type}\n              handleShowDropTargetsClick={this.handleShowDropTargetsClick}\n            />\n          </div>\n          {subMenu}\n        </li>\n      )\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  deleteItem: smActions.deleteItem,\n  toggleHeading: showFormActions.toggleHeading,\n  toggleTimespan: showFormActions.toggleTimespan,\n  addDropTargets: smActions.addDropTargets,\n  removeDropTargets: smActions.removeDropTargets,\n  removeActiveDragSources: smActions.removeActiveDragSources,\n  setActiveDragSource: smActions.setActiveDragSource,\n  showModal: showFormActions.showModal\n};\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nconst ConnectedDropTarget = DropTarget(ItemTypes.SPAN, spanTarget, collectDrop);\nconst ConnectedDragSource = DragSource(ItemTypes.SPAN, spanSource, collectDrag);\nconst DragConnected = ConnectedDropTarget(ConnectedDragSource(ListItem));\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DragConnected);\n","import React, { Component } from 'react';\nimport { DropTarget } from 'react-dnd';\nimport { ItemTypes } from '../services/Constants';\nimport { connect } from 'react-redux';\nimport * as smActions from '../actions/sm-data';\n\nconst styles = {\n  li: {\n    border: '2px #999 dashed',\n    opacity: 0.3\n  },\n  liHovered: {\n    border: '5px #999 dashed',\n    opacity: 0.5\n  }\n};\n\nconst optionalTarget = {\n  hover(props, monitor, component) {\n    //console.log('hover over drop target');\n  },\n\n  drop(props, monitor, component) {\n    let dragItem = monitor.getItem();\n\n    props.handleListItemDrop(dragItem, props.item);\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    // Call this function inside render()\n    // to let React DnD handle the drag events:\n    connectDropTarget: connect.dropTarget(),\n    // You can ask the monitor about the current drag state:\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop(),\n    itemType: monitor.getItemType()\n  };\n}\n\nclass PlaceholderItem extends Component {\n  render() {\n    const { isOver, connectDropTarget } = this.props;\n\n    return connectDropTarget(\n      <li className=\"row-wrapper\" style={isOver ? styles.liHovered : styles.li}>\n        Drop here\n      </li>\n    );\n  }\n}\n\nconst ConnectedDropTarget = DropTarget(ItemTypes.SPAN, optionalTarget, collect)(\n  PlaceholderItem\n);\n\nconst mapDispatchToProps = dispatch => ({\n  handleListItemDrop: (dragItem, dropItem) =>\n    dispatch(smActions.handleListItemDrop(dragItem, dropItem))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ConnectedDropTarget);\n","import React from 'react';\nimport ListItem from './ListItem';\nimport PlaceholderItem from './PlaceholderItem';\n\nconst List = props => {\n  return (\n    <ul className=\"structure-list\">\n      {props.items.map((item, i) => {\n        if (!item) {\n          return null;\n        }\n        if (item.type === 'optional') {\n          return <PlaceholderItem key={i} item={item} />\n        }\n        return <ListItem key={item.label} item={item} />;\n      })}\n    </ul>\n  );\n}\n\nexport default List;\n","import _ from 'lodash';\nimport moment from 'moment';\nimport uuidv1 from 'uuid/v1';\n\n/**\n * Rules - https://github.com/avalonmediasystem/avalon/issues/3022\n *\n * a timespan does not allow overlap.\n * a timepan can not be out of order.\n * a timespan can not be demoted from a parent unless it is the last item in the relationship (last child), as it would create an out of order item.\n * Timespans can only be moved ONE parent- level up or down.\n * Use an arrow and handle click.\n * Only first and last time-spans can be moved. Middle Children are stuck.\n * Headings are ordered by the children they have.\n * If when creating a timespan, you butt against the start or end of another timespan, you have to change the other timepan first.\n * Labels can be edited at will.\n */\n\nexport default class StructuralMetadataUtils {\n  /**\n   * Helper function to create a dropZone object for drag and drop\n   * @returns {Object}\n   */\n  createDropZoneObject() {\n    return {\n      type: 'optional',\n      label: uuidv1()\n    };\n  }\n\n  /**\n   * Helper function which creates an object with the shape our data structure requires\n   * @param {Object} obj\n   * @return {Object}\n   */\n  createSpanObject(obj) {\n    return {\n      type: 'span',\n      label: obj.timespanTitle,\n      begin: obj.beginTime,\n      end: obj.endTime\n    };\n  }\n\n  /**\n   * Remove a targeted list item object from data structure\n   * @param {Object} item - span object\n   * @param {Array} allItems array of items, usually all current items in the data structure\n   * @return {Array}\n   */\n  deleteListItem(item, allItems) {\n    let clonedItems = [...allItems];\n    let parentDiv = this.getParentDiv(item, clonedItems);\n    let indexToDelete = _.findIndex(parentDiv.items, { label: item.label });\n\n    parentDiv.items.splice(indexToDelete, 1);\n\n    return clonedItems;\n  }\n\n  /**\n   * Update the data structure to represent all possible dropTargets for the provided dragSource\n   * @param {Object} dragSource\n   * @param {Object} allItems\n   * @returns {Array} - new computed items\n   */\n  determineDropTargets(dragSource, allItems) {\n    const clonedItems = [...allItems];\n\n    if (dragSource.type === 'span') {\n      let wrapperSpans = this.findWrapperSpans(\n        dragSource,\n        this.getItemsOfType('span', clonedItems)\n      );\n      let parentDiv = this.getParentDiv(dragSource, clonedItems);\n      let siblings = parentDiv ? parentDiv.items : [];\n      let spanIndex = siblings\n        .map(sibling => sibling.label)\n        .indexOf(dragSource.label);\n      let stuckInMiddle = this.dndHelper.stuckInMiddle(spanIndex, siblings, parentDiv);\n\n      // If span falls in the middle of other spans, it can't be moved\n      if (stuckInMiddle) {\n        return clonedItems;\n      }\n\n      // Sibling before is a div?\n      if (spanIndex !== 0 && siblings[spanIndex - 1].type === 'div') {\n        let sibling = siblings[spanIndex - 1];\n        if (sibling.items) {\n          sibling.items.push(this.createDropZoneObject());\n        } else {\n          sibling.items = [this.createDropZoneObject()];\n        }\n      }\n\n      // Sibling after is a div?\n      if (\n        spanIndex !== siblings.length - 1 &&\n        siblings[spanIndex + 1].type === 'div'\n      ) {\n        let sibling = siblings[spanIndex + 1];\n        if (sibling.items) {\n          sibling.items.unshift(this.createDropZoneObject());\n        } else {\n          sibling.items = [this.createDropZoneObject()];\n        }\n      }\n\n      let grandParentDiv = this.getParentDiv(parentDiv, clonedItems);\n      let parentIndex = grandParentDiv\n        ? grandParentDiv.items.map(item => item.label).indexOf(parentDiv.label)\n        : null;\n\n      // A first child of siblings, or an only child\n      if (spanIndex === 0) {\n        // Can't move up\n        if (parentIndex === null) {\n          return clonedItems;\n        }\n\n        if (grandParentDiv) {\n          // Insert directly before the parent div\n          grandParentDiv.items.splice(\n            parentIndex,\n            0,\n            this.createDropZoneObject()\n          );\n\n          // Insert after the \"before\" wrapper span (if one exists)\n          if (wrapperSpans.before) {\n            let beforeParent = this.getParentDiv(\n              wrapperSpans.before,\n              clonedItems\n            );\n            let beforeIndex = beforeParent.items\n              .map(item => item.label)\n              .indexOf(wrapperSpans.before.label);\n\n            // Before the insert, check that the dropTarget index doesn't already exist\n            if (\n              beforeParent.items[beforeIndex + 1] &&\n              beforeParent.items[beforeIndex + 1].type !== 'optional'\n            ) {\n              beforeParent.items.splice(\n                beforeIndex + 1,\n                0,\n                this.createDropZoneObject()\n              );\n            }\n          }\n\n          // Insert before the \"after\" wrapper span (if one exists)\n          if (wrapperSpans.after) {\n            this.dndHelper.addSpanAfter(clonedItems, wrapperSpans.after);\n          }\n        }\n      }\n\n      // Last child of siblings\n      if (spanIndex === siblings.length - 1 && spanIndex !== 0) {\n        if (wrapperSpans.after) {\n          this.dndHelper.addSpanAfter(clonedItems, wrapperSpans.after);\n        }\n      }\n    }\n\n    return clonedItems;\n  }\n\n  /**\n   * Helper object for drag and drop data structure manipulations\n   * This mutates the state of the data structure\n   */\n  dndHelper = {\n    addSpanAfter: (clonedItems, wrapperSpanAfter) => {\n      let afterParent = this.getParentDiv(wrapperSpanAfter, clonedItems);\n      let afterIndex = afterParent.items\n        .map(item => item.label)\n        .indexOf(wrapperSpanAfter.label);\n\n      afterParent.items.splice(afterIndex, 0, this.createDropZoneObject());\n    },\n    stuckInMiddle: (spanIndex, siblings, parentDiv) => {\n      return (\n        spanIndex !== 0 &&\n        spanIndex !== siblings.length - 1 &&\n        parentDiv.items[spanIndex - 1].type === 'span' &&\n        parentDiv.items[spanIndex + 1].type === 'span'\n      );\n    }\n  };\n\n  /**\n   * Determine whether a time overlaps (or falls between), an existing timespan's range\n   * @param {String} time - form input value\n   * @param {*} allSpans - all timespans in the data structure\n   * @return {Boolean}\n   */\n  doesTimeOverlap(time, allSpans) {\n    const { toMs } = this;\n    let valid = true;\n    time = toMs(time);\n\n    // Loop through all spans\n    for (let i in allSpans) {\n      let spanBegin = toMs(allSpans[i].begin);\n      let spanEnd = toMs(allSpans[i].end);\n\n      // Illegal time (falls between existing start/end times)\n      if (time >= spanBegin && time < spanEnd) {\n        valid = false;\n        break;\n      }\n    }\n    return valid;\n  }\n\n  doesTimespanOverlap(beginTime, endTime, allSpans) {\n    const { toMs } = this;\n    // Filter out only spans where new begin time is before an existing begin time\n    let filteredSpans = allSpans.filter(span => {\n      return toMs(beginTime) < toMs(span.begin);\n    });\n    // Return whether new end time overlaps the next begin time\n    return toMs(endTime) > toMs(filteredSpans[0].begin);\n  }\n\n  /**\n   * @param {String} label - string value to match against\n   * @param {Array} items - Array of nested structured metadata objects containing headings and time spans\n   * @return {Object} - Object found, or null if none\n   */\n  findItemByLabel(label, items) {\n    let foundItem = null;\n    let findItem = items => {\n      for (let item of items) {\n        if (item.label === label) {\n          foundItem = item;\n        }\n        if (item.items) {\n          findItem(item.items);\n        }\n      }\n    };\n    findItem(items);\n\n    return foundItem;\n  }\n\n  /**\n   * Find the <span>s which come before and after new span\n   * @param {Object} newSpan - new span object\n   * @param {Array} allSpans - all type <span> objects in current structured metadata\n   * @returns {Object} - wrapper <span>s object: { before: spanObject, after: spanObject }\n   */\n  findWrapperSpans(newSpan, allSpans) {\n    const { toMs } = this;\n    let wrapperSpans = {\n      before: null,\n      after: null\n    };\n    let spansBefore = allSpans.filter(\n      span => toMs(newSpan.begin) >= toMs(span.end)\n    );\n    let spansAfter = allSpans.filter(\n      span => toMs(newSpan.end) <= toMs(span.begin)\n    );\n\n    wrapperSpans.before =\n      spansBefore.length > 0 ? spansBefore[spansBefore.length - 1] : null;\n    wrapperSpans.after = spansAfter.length > 0 ? spansAfter[0] : null;\n\n    return wrapperSpans;\n  }\n\n  /**\n   * Get all items in data structure of type 'div' or 'span'\n   * @param {Array} json\n   * @returns {Array} - all stripped down objects of type in the entire structured metadata collection\n   */\n  getItemsOfType(type = 'div', items = []) {\n    let options = [];\n\n    // Recursive function to search the whole data structure\n    let getItems = items => {\n      for (let item of items) {\n        if (item.type === type) {\n          let currentObj = { ...item };\n          delete currentObj.items;\n          options.push(currentObj);\n        }\n        if (item.items) {\n          getItems(item.items);\n        }\n      }\n    };\n    getItems(items);\n\n    return options;\n  }\n\n  getParentDiv(child, allItems) {\n    let foundDiv = null;\n\n    let findItem = (child, items) => {\n      for (let item of items) {\n        if (item.items) {\n          let childItem = item.items.filter(\n            currentChild => child.label === currentChild.label\n          );\n          // Found it\n          if (childItem.length > 0) {\n            foundDiv = item;\n            break;\n          }\n          findItem(child, item.items);\n        }\n      }\n    };\n    findItem(child, allItems);\n    return foundDiv;\n  }\n\n  /**\n   * Overall logic is to find existing before and after spans for the new object (time flow), and then\n   * their parent 'divs' would be valid headings.\n   * @param {Object} newSpan - Object which has (at the least) { begin: '00:10:20.33', end: '00:15:88' } properties\n   * @param {Object} wrapperSpans Object representing before and after spans of newSpan (if they exist)\n   * @param {Array} allItems - All structural metadata items in tree\n   * @return {Array} - of valid <div> objects in structural metadata tree\n   */\n  getValidHeadings(newSpan, wrapperSpans, allItems) {\n    let validHeadings = [];\n\n    let findSpanItem = (targetSpan, items) => {\n      for (let item of items) {\n        // Children items exist\n        if (item.items) {\n          // Check for a target span match\n          let targetSpanMatch = item.items.filter(\n            childItem => childItem.label === targetSpan.label\n          );\n          // Match found\n          if (targetSpanMatch.length > 0) {\n            // Add parent div to valid array\n            validHeadings.push(item);\n          }\n          // Try deeper in list\n          findSpanItem(targetSpan, item.items);\n        }\n      }\n    };\n\n    // There are currently no spans, ALL headings are valid\n    if (!wrapperSpans.before && !wrapperSpans.after) {\n      // Get all headings and return them\n      validHeadings = this.getItemsOfType('div', allItems);\n    }\n\n    if (wrapperSpans.before) {\n      findSpanItem(wrapperSpans.before, allItems);\n    }\n    if (wrapperSpans.after) {\n      findSpanItem(wrapperSpans.after, allItems);\n    }\n\n    return validHeadings;\n  }\n\n  /**\n   * Helper function which handles React Dnd's dropping of a dragSource onto a dropTarget\n   * It needs to re-arrange the data structure to reflect the new positions\n   * @param {Object} dragSource - a minimal object React DnD uses with only the label value\n   * @param {Object} dropTarget\n   * @param {Array} allItems\n   * @returns {Array}\n   */\n  handleListItemDrop(dragSource, dropTarget, allItems) {\n    let clonedItems = [...allItems];\n    let itemToMove = this.findItemByLabel(dragSource.label, clonedItems);\n\n    // Slice out previous position of itemToMove\n    let itemToMoveParent = this.getParentDiv(itemToMove, clonedItems);\n    let itemToMoveItemIndex = itemToMoveParent.items\n      .map(item => item.label)\n      .indexOf(itemToMove.label);\n    itemToMoveParent.items.splice(itemToMoveItemIndex, 1);\n\n    // Place itemToMove right after the placeholder array position\n    let dropTargetParent = this.getParentDiv(dropTarget, clonedItems);\n    let dropTargetItemIndex = dropTargetParent.items\n      .map(item => item.label)\n      .indexOf(dropTarget.label);\n    dropTargetParent.items.splice(dropTargetItemIndex, 0, itemToMove);\n\n    // Get rid of all placeholder elements\n    return this.removeDropTargets(clonedItems);\n  }\n\n  /**\n   * Insert a new heading as child of an existing heading\n   * @param {Object} obj - new heading object to insert\n   * @param {Array} allItems - The entire structured metadata collection\n   * @returns {Array} - The updated structured metadata collection, with new object inserted\n   */\n  insertNewHeader(obj, allItems) {\n    let clonedItems = [...allItems];\n    const targetLabel = obj.headingChildOf;\n    let foundDiv =\n      this.findItemByLabel(targetLabel, clonedItems) || clonedItems[0];\n\n    // If children exist, add to list\n    if (foundDiv) {\n      foundDiv.items.unshift({\n        type: 'div',\n        label: obj.headingTitle,\n        items: []\n      });\n    }\n\n    return clonedItems;\n  }\n\n  /**\n   * Insert a new timespan as child of an existing heading\n   * @param {Object} obj - object of form values submitted\n   * @param {Array} allItems - The entire structured metadata collection\n   * @returns {Array} - The updated structured metadata collection, with new object inserted\n   */\n  insertNewTimespan(obj, allItems) {\n    let clonedItems = [...allItems];\n    let foundDiv = this.findItemByLabel(obj.timespanChildOf, clonedItems);\n    const spanObj = this.createSpanObject(obj);\n    let insertIndex = 0;\n\n    // If children exist, add to list\n    if (foundDiv) {\n      let childSpans = foundDiv.items.filter(item => item.type === 'span');\n\n      // Get before and after sibling spans\n      let wrapperSpans = this.findWrapperSpans(spanObj, childSpans);\n\n      if (wrapperSpans.before) {\n        insertIndex =\n          _.findIndex(foundDiv.items, { label: wrapperSpans.before.label }) + 1;\n      }\n      // Insert new span at appropriate index\n      foundDiv.items.splice(insertIndex, 0, spanObj);\n    }\n\n    return clonedItems;\n  }\n\n  /**\n   * Recursive function to clean out any 'active' drag item property in the data structure\n   * @param {Array} allItems\n   * @returns {Array}\n   */\n  removeActiveDragSources(allItems) {\n    let removeActive = parent => {\n      if (!parent.items) {\n        if (parent.active) {\n          parent.active = false;\n        }\n        return parent;\n      }\n      parent.items = parent.items.map(child => removeActive(child));\n\n      return parent;\n    };\n    let cleanItems = removeActive(allItems[0]);\n\n    return [cleanItems];\n  }\n\n  /**\n   * Recursive function to remove all temporary Drop Target objects from the structured metadata items\n   * @param {Array} allItems\n   */\n  removeDropTargets(allItems) {\n    let removeFromTree = (parent, childTypeToRemove) => {\n      if (!parent.items) {\n        return parent;\n      }\n\n      parent.items = parent.items\n        .filter(child => child.type !== childTypeToRemove)\n        .map(child => removeFromTree(child, childTypeToRemove));\n\n      return parent;\n    };\n    let cleanItems = removeFromTree(allItems[0], 'optional');\n\n    return [cleanItems];\n  }\n\n  /**\n   * Moment.js helper millisecond converter to make calculations consistent\n   * @param {String} strTime form input value\n   */\n  toMs(strTime) {\n    return moment.duration(strTime).asMilliseconds();\n  }\n\n  /**\n   * Does 'before' time start prior to 'end' time?\n   * @param {String} begin form intput value\n   * @param {String} end form input value\n   * @return {Boolean}\n   */\n  validateBeforeEndTimeOrder(begin, end) {\n    if (!begin || !end) {\n      return true;\n    }\n    if (this.toMs(begin) >= this.toMs(end)) {\n      return false;\n    }\n    return true;\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\nimport {\n  Button,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Modal\n} from 'react-bootstrap';\nimport * as actions from '../actions/show-forms';\nimport PropTypes from 'prop-types';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\nclass HeadingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.unEditedItem = null;\n  }\n\n  state = {\n    headingTitle: '',\n    headingChildOf: '',\n    childOfOptions: []\n  };\n\n  componentDidMount() {\n    const { showForms } = this.props;\n\n    // Save the unedited version of item so we can find it later\n    if (this.props.showForms.mode === 'EDIT') {\n      this.unEditedItem = structuralMetadataUtils.findItemByLabel(\n        this.props.showForms.label,\n        this.props.smData\n      );\n    }\n\n    // Get select dropdown options\n    let obj = {\n      childOfOptions: this.getOptions()\n    };\n\n    // Edit mode: Load existing form values\n    if (showForms.mode === 'EDIT') {\n      obj = { ...obj, ...this.loadExistingValues() };\n    }\n    this.setState(obj);\n  }\n\n  formIsValid() {\n    const { headingTitle } = this.state;\n    const titleValid = headingTitle && headingTitle.length > 0;\n\n    return titleValid;\n  }\n\n  getOptions() {\n    let allHeaders = structuralMetadataUtils.getItemsOfType(\n      'div',\n      this.props.smData\n    );\n    let options = allHeaders.map(header => (\n      <option value={header.label} key={header.label}>\n        {header.label}\n      </option>\n    ));\n\n    return options;\n  }\n\n  getValidationTitleState() {\n    if (this.state.headingTitle.length > 2) {\n      return 'success';\n    }\n    if (this.state.headingTitle.length > 0) {\n      return 'error';\n    }\n    return null;\n  }\n\n  handleCancelClick = () => {\n    this.props.toggleHeading();\n  };\n\n  handleChildOfChange = e => {\n    this.setState({ headingChildOf: e.target.value });\n  };\n\n  handleHeadingChange = e => {\n    this.setState({ headingTitle: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { headingChildOf, headingTitle } = this.state;\n\n    this.props.onSubmit({\n      headingChildOf,\n      headingTitle,\n      unEditedItem: this.unEditedItem\n    });\n  };\n\n  loadExistingValues() {\n    const { showForms, smData } = this.props;\n    let item = structuralMetadataUtils.findItemByLabel(showForms.label, smData);\n    let parentDiv = structuralMetadataUtils.getParentDiv(item, smData);\n\n    if (parentDiv) {\n      parentDiv = parentDiv.label;\n    }\n\n    return {\n      headingTitle: showForms.label,\n      headingChildOf: parentDiv || ''\n    };\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.showForms.mode === 'ADD' ? 'Add' : 'Edit'} Heading</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <FormGroup\n            controlId=\"headingTitle\"\n            validationState={this.getValidationTitleState()}\n          >\n            <ControlLabel>Title</ControlLabel>\n            <FormControl\n              type=\"text\"\n              value={this.state.headingTitle}\n              onChange={this.handleHeadingChange}\n            />\n            <FormControl.Feedback />\n          </FormGroup>\n\n          <FormGroup controlId=\"headingChildOf\">\n            <ControlLabel>Child Of</ControlLabel>\n            <FormControl\n              componentClass=\"select\"\n              placeholder=\"select\"\n              onChange={this.handleChildOfChange}\n              value={this.state.headingChildOf}\n            >\n              <option value=\"\">Select...</option>\n              {this.state.childOfOptions}\n            </FormControl>\n          </FormGroup>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            bsStyle=\"primary\"\n            type=\"submit\"\n            disabled={!this.formIsValid()}\n          >\n            Save\n          </Button>\n          <Button onClick={this.props.closeModal}>Cancel</Button>\n        </Modal.Footer>\n      </form>\n    );\n  }\n}\n\nHeadingForm.propTypes = {\n  onSubmit: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  showForms: state.showForms,\n  smData: state.smData\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(HeadingForm);\n","import React, { Component } from 'react';\nimport HeadingForm from '../components/HeadingForm';\nimport { connect } from 'react-redux';\nimport * as smActions from '../actions/sm-data';\nimport * as showFormsActions from '../actions/show-forms';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\n\nclass HeadingFormContainer extends Component {\n  state = {\n    message: null\n  };\n\n  submit = values => {\n    const { mode } = this.props.showForms;\n\n    let newItem = {\n      headingChildOf: values.headingChildOf,\n      headingTitle: values.headingTitle\n    };\n\n    // Delete the original heading item first, if editing\n    let smData =\n      mode === 'EDIT'\n        ? structuralMetadataUtils.deleteListItem(\n            values.unEditedItem,\n            this.props.smData\n          )\n        : this.props.smData;\n\n    // Update the data structure with new heading\n    const updatedData = structuralMetadataUtils.insertNewHeader(\n      newItem,\n      smData\n    );\n\n    // Update redux store\n    this.props.buildSMUI(updatedData);\n\n    // Close the form\n    this.props.closeModal();\n  };\n\n  render() {\n    return <HeadingForm onSubmit={this.submit} />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  buildSMUI: data => dispatch(smActions.buildSMUI(data)),\n  closeModal: () => dispatch(showFormsActions.closeModal())\n});\n\nconst mapStateToProps = state => ({\n  showForms: state.showForms,\n  smData: state.smData\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeadingFormContainer);\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Col,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Modal,\n  Row\n} from 'react-bootstrap';\nimport * as showFormActions from '../actions/show-forms';\nimport * as smActions from '../actions/sm-data';\nimport { connect } from 'react-redux';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\n\nclass TimespanForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beginTime: '',\n      endTime: '',\n      timespanChildOf: '',\n      timespanTitle: '',\n      validHeadings: []\n    };\n    this.unEditedItem = null;\n  }\n\n  componentDidMount() {\n    if (this.props.showForms.mode === 'EDIT') {\n      // Grab the currently edited item from the data structure\n      let smItem = structuralMetadataUtils.findItemByLabel(\n        this.props.showForms.label,\n        this.props.smData\n      );\n\n      // Save the unedited, Form version of the item, so we can use it later\n      this.unEditedFormItem = this.loadExistingValues();\n\n      // Load existing form values\n      this.setState(this.unEditedFormItem);\n\n      // Remove the timespan from data structure to make room for the saved edited version\n      this.props.deleteItem(smItem);\n    }\n\n    // Save a reference to all the spans for future calculations\n    this.allSpans = structuralMetadataUtils.getItemsOfType(\n      'span',\n      this.props.smData\n    );\n  }\n\n  buildHeadingsOptions = () => {\n    let newSpan = {\n      begin: this.state.beginTime,\n      end: this.state.endTime\n    };\n    // Get spans in overall span list which fall before and after the new span\n    let wrapperSpans = structuralMetadataUtils.findWrapperSpans(\n      newSpan,\n      this.allSpans\n    );\n\n    // Get all valid div headings\n    let validHeadings = structuralMetadataUtils.getValidHeadings(\n      newSpan,\n      wrapperSpans,\n      this.props.smData\n    );\n\n    // Update state with valid headings\n    this.setState({ validHeadings });\n  };\n\n  clearHeadingOptions = () => {\n    this.setState({\n      validHeadings: []\n    });\n  };\n\n  formIsValid() {\n    const titleValid = this.state.timespanTitle.length > 0;\n    const childOfValid = this.state.timespanChildOf.length > 0;\n    const timesValidResponse = this.validTimespans();\n\n    return titleValid && childOfValid && timesValidResponse.valid;\n  }\n\n  getValidationBeginState() {\n    const { beginTime } = this.state;\n\n    if (!beginTime || beginTime.indexOf(':') === -1) {\n      return null;\n    }\n\n    const validFormat = this.validTimeFormat(beginTime);\n    const validBeginTime = structuralMetadataUtils.doesTimeOverlap(\n      beginTime,\n      this.allSpans\n    );\n\n    if (validFormat && validBeginTime) {\n      return 'success';\n    }\n    if (!validFormat || !validBeginTime) {\n      return 'error';\n    }\n    return null;\n  }\n\n  getValidationEndState() {\n    const { beginTime, endTime } = this.state;\n\n    if (!endTime || endTime.indexOf(':') === -1) {\n      return null;\n    }\n\n    const validFormat = this.validTimeFormat(endTime);\n    const validEndTime = structuralMetadataUtils.doesTimeOverlap(\n      endTime,\n      this.allSpans\n    );\n    const validOrdering = structuralMetadataUtils.validateBeforeEndTimeOrder(\n      beginTime,\n      endTime\n    );\n    const doesTimespanOverlap = structuralMetadataUtils.doesTimespanOverlap(\n      beginTime,\n      endTime,\n      this.allSpans\n    );\n\n    if (validFormat && validEndTime && validOrdering && !doesTimespanOverlap) {\n      return 'success';\n    }\n    if (\n      !validFormat ||\n      !validEndTime ||\n      !validOrdering ||\n      doesTimespanOverlap\n    ) {\n      return 'error';\n    }\n    return null;\n  }\n\n  getValidationTitleState() {\n    const { timespanTitle } = this.state;\n\n    if (timespanTitle.length > 2) {\n      return 'success';\n    }\n    if (timespanTitle.length > 0) {\n      return 'error';\n    }\n    return null;\n  }\n\n  handleInputChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { beginTime, endTime, timespanChildOf, timespanTitle } = this.state;\n\n    this.props.onSubmit({\n      beginTime,\n      endTime,\n      timespanChildOf,\n      timespanTitle\n    });\n  };\n\n  handleTimeChange = e => {\n    this.setState({ [e.target.id]: e.target.value }, this.updateChildOfOptions);\n  };\n\n  handleCancelClick = () => {\n    // Add the edited item back to data structure\n    console.log('unEditedFormItem', this.unEdiunEditedFormItemtedItem);\n    this.props.onSubmit(this.unEditedFormItem);\n\n    this.props.closeModal();\n  };\n\n  handleChildOfChange = e => {\n    this.setState({ timespanChildOf: e.target.value });\n  };\n\n  /**\n   * Load existing form values to state, if in 'EDIT' mode\n   */\n  loadExistingValues() {\n    const { showForms, smData } = this.props;\n    let item = structuralMetadataUtils.findItemByLabel(showForms.label, smData);\n    let parentDiv = structuralMetadataUtils.getParentDiv(item, smData);\n\n    if (parentDiv) {\n      parentDiv = parentDiv.label;\n    }\n\n    return {\n      beginTime: item.begin,\n      endTime: item.end,\n      timespanChildOf: parentDiv || '',\n      timespanTitle: item.label\n    };\n  }\n\n  updateChildOfOptions() {\n    let timesValidResponse = this.validTimespans();\n\n    if (timesValidResponse.valid) {\n      this.buildHeadingsOptions();\n    } else {\n      this.clearHeadingOptions();\n    }\n  }\n\n  /**\n   * Validates that the begin and end time span values are valid separately, and together\n   * in the region which they will create.\n   *\n   * This function also preps handy feedback messages we might want to display to the user\n   */\n  validTimespans() {\n    const { beginTime, endTime } = this.state;\n    const { allSpans } = this;\n\n    // Valid formats?\n    if (!this.validTimeFormat(beginTime)) {\n      return {\n        valid: false,\n        message: 'Invalid begin time format'\n      };\n    }\n    if (!this.validTimeFormat(endTime)) {\n      return {\n        valid: false,\n        message: 'Invalid end time format'\n      };\n    }\n    // Any individual overlapping?\n    if (!structuralMetadataUtils.doesTimeOverlap(beginTime, allSpans)) {\n      return {\n        valid: false,\n        message: 'Begin time overlaps an existing timespan region'\n      };\n    }\n    if (!structuralMetadataUtils.doesTimeOverlap(endTime, allSpans)) {\n      return {\n        valid: false,\n        message: 'End time overlaps an existing timespan region'\n      };\n    }\n    // Begin comes before end?\n    if (\n      !structuralMetadataUtils.validateBeforeEndTimeOrder(beginTime, endTime)\n    ) {\n      return {\n        valid: false,\n        message: 'Begin time must start before end time'\n      };\n    }\n    // Timespan range overlaps an existing timespan?\n    if (\n      structuralMetadataUtils.doesTimespanOverlap(beginTime, endTime, allSpans)\n    ) {\n      return {\n        valid: false,\n        message: 'New timespan region overlaps an existing timespan region'\n      };\n    }\n\n    // Success!\n    return { valid: true };\n  }\n\n  validTimeFormat(value) {\n    return value && value.split(':').length === 3;\n  }\n\n  render() {\n    const { beginTime, endTime, timespanChildOf, timespanTitle } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {this.props.showForms.mode === 'ADD' ? 'Add' : 'Edit'} Timespan\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <FormGroup\n            controlId=\"timespanTitle\"\n            validationState={this.getValidationTitleState()}\n          >\n            <ControlLabel>Title</ControlLabel>\n            <FormControl\n              type=\"text\"\n              value={timespanTitle}\n              onChange={this.handleInputChange}\n            />\n            <FormControl.Feedback />\n          </FormGroup>\n\n          <Row>\n            <Col sm={6}>\n              <FormGroup\n                controlId=\"beginTime\"\n                validationState={this.getValidationBeginState()}\n              >\n                <ControlLabel>Begin Time</ControlLabel>\n                <FormControl\n                  type=\"text\"\n                  value={beginTime}\n                  placeholder=\"00:00:00\"\n                  onChange={this.handleTimeChange}\n                />\n                <FormControl.Feedback />\n              </FormGroup>\n            </Col>\n            <Col sm={6}>\n              <FormGroup\n                controlId=\"endTime\"\n                validationState={this.getValidationEndState()}\n              >\n                <ControlLabel>End Time</ControlLabel>\n                <FormControl\n                  type=\"text\"\n                  value={endTime}\n                  placeholder=\"00:00:00\"\n                  onChange={this.handleTimeChange}\n                />\n                <FormControl.Feedback />\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <FormGroup controlId=\"timespanChildOf\">\n            <ControlLabel>Child Of</ControlLabel>\n            <FormControl\n              componentClass=\"select\"\n              placeholder=\"select\"\n              onChange={this.handleChildOfChange}\n              value={timespanChildOf}\n            >\n              <option value=\"\">Select...</option>\n              {this.state.validHeadings.map(item => (\n                <option value={item.label} key={item.label}>\n                  {item.label}\n                </option>\n              ))}\n            </FormControl>\n          </FormGroup>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            bsStyle=\"primary\"\n            type=\"submit\"\n            disabled={!this.formIsValid()}\n          >\n            Add\n          </Button>\n          <Button onClick={this.handleCancelClick}>Cancel</Button>\n        </Modal.Footer>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showForms: state.showForms,\n  smData: state.smData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  closeModal: () => dispatch(showFormActions.closeModal()),\n  deleteItem: item => dispatch(smActions.deleteItem(item))\n});\n\nTimespanForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimespanForm);\n\nexport default TimespanForm;\n","import React, { Component } from 'react';\nimport TimespanForm from '../components/TimespanForm';\nimport { connect } from 'react-redux';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\nimport * as smActions from '../actions/sm-data';\nimport * as showFormsActions from '../actions/show-forms';\n\nconst structuralMetadataUtils = new StructuralMetadataUtils();\nclass TimespanFormContainer extends Component {\n  state = {\n    message: null\n  };\n\n  submit = values => {\n    // Update the data structure with new heading\n    const updatedData = structuralMetadataUtils.insertNewTimespan(\n      values,\n      this.props.smData\n    );\n\n    // Update redux store\n    this.props.buildSMUI(updatedData);\n\n    // Close the form\n    this.props.closeModal();\n  };\n\n  render() {\n    return (\n      <TimespanForm onSubmit={this.submit} />\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  buildSMUI: data => dispatch(smActions.buildSMUI(data)),\n  closeModal: () => dispatch(showFormsActions.closeModal())\n});\n\nconst mapStateToProps = state => ({\n  showForms: state.showForms,\n  smData: state.smData\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimespanFormContainer);\n","import React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport * as formActions from '../actions/show-forms';\nimport HeadingFormContainer from './HeadingFormContainer';\nimport TimespanFormContainer from './TimespanFormContainer';\n\nclass ModalContainer extends Component {\n  render() {\n    const { listItemType } = this.props.showForms;\n\n    return (\n      <Modal show={this.props.showForms.modal} onHide={this.props.closeModal}>\n        {listItemType === 'div' && <HeadingFormContainer />}\n        {listItemType === 'span' && <TimespanFormContainer />}\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showForms: state.showForms\n});\n\nexport default connect(\n  mapStateToProps,\n  formActions\n)(ModalContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport List from '../components/List';\nimport ModalContainer from './ModalContainer';\n\nclass StructureOutputContainer extends Component {\n  render() {\n    const { smData = [] } = this.props;\n\n    return (\n      <section>\n        <hr />\n        <h2>Output</h2>\n        <List items={smData} />\n        <ModalContainer />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  smData: state.smData\n});\n\nexport default connect(mapStateToProps)(StructureOutputContainer);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Waveform from './components/Waveform';\nimport ButtonSection from './components/ButtonSection';\nimport SampleGenerateButtonContainer from './containers/SampleGenerateButtonContainer';\nimport StructureOutputContainer from './containers/StructureOutputContainer';\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\n// Font Awesome Imports\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faDotCircle, faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faDotCircle, faPen, faTrash);\n\nclass App extends Component {\n  render() {\n    return (\n      <DragDropContextProvider backend={HTML5Backend}>\n        <div className=\"container\">\n          <h1>Test Structural Metadata Editor</h1>\n          <Waveform />\n          <SampleGenerateButtonContainer />\n          <ButtonSection />\n          <StructureOutputContainer />\n        </div>\n      </DragDropContextProvider>\n    );\n  }\n}\n\nexport default App;\n","import * as types from '../actions/types';\n\nconst initialState = {\n  heading: false,\n  timespan: false,\n  modal: false\n};\n\nconst showForms = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TOGGLE_HEADING_FORM:\n      return Object.assign({}, state, {\n        heading: action.show,\n        mode: action.mode,\n        label: action.label\n      });\n    case types.TOGGLE_TIMESPAN_FORM:\n      return Object.assign({}, state, {\n        timespan: action.show,\n        mode: action.mode\n      });\n    case types.SHOW_MODAL:\n      return Object.assign({}, state, {\n        modal: true,\n        mode: action.mode,\n        listItemType: action.listItemType,\n        label: action.label\n      });\n    case types.CLOSE_MODAL:\n      return Object.assign({}, state, {\n        modal: false\n      });\n    default:\n      return state;\n  }\n};\n\nexport default showForms;\n","import * as types from '../actions/types';\nimport StructuralMetadataUtils from '../services/StructuralMetadataUtils';\n\nconst structrualMetadataUtils = new StructuralMetadataUtils();\nconst initialState = [];\nlet stateClone = null;\nlet newState = null;\n\nconst smData = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADD_HEADING:\n      stateClone = [...state];\n      stateClone.push(action.payload);\n      return stateClone;\n\n    case types.BUILD_SM_UI:\n      return action.payload;\n\n    case types.DELETE_ITEM:\n      return structrualMetadataUtils.deleteListItem(action.payload, [...state]);\n\n    case types.ADD_DROP_TARGETS:\n      newState = structrualMetadataUtils.determineDropTargets(action.payload, [...state]);\n      return newState;\n\n    case types.REMOVE_DROP_TARGETS:\n      let noDropTargetsState = structrualMetadataUtils.removeDropTargets([...state]);\n      return noDropTargetsState;\n\n    case types.SET_ACTIVE_DRAG_SOURCE:\n      stateClone = [...state];\n      let target = structrualMetadataUtils.findItemByLabel(\n        action.label,\n        stateClone\n      );\n      // Put an active flag on list item\n      target.active = true;\n      return stateClone;\n\n    case types.REMOVE_ACTIVE_DRAG_SOURCES:\n      let noActiveDragSourcesState = structrualMetadataUtils.removeActiveDragSources(\n        state\n      );\n      return noActiveDragSourcesState;\n\n    case types.HANDLE_LIST_ITEM_DROP:\n      newState = structrualMetadataUtils.handleListItemDrop(\n        action.dragSource,\n        action.dropTarget,\n        state\n      );\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default smData;\n","import { combineReducers } from 'redux';\nimport showForms from './show-forms';\nimport smData from './sm-data';\n\nexport default combineReducers({\n  showForms,\n  smData\n});\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}